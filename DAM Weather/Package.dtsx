<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/11/2025 7:53:51 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-U4P8LIU"
  DTS:CreatorName="DESKTOP-U4P8LIU\Bence"
  DTS:DTSID="{61744CE2-38DB-475B-B6F5-BAF513C112FD}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="86"
  DTS:VersionGUID="{ED285651-795B-41EE-B344-7CE55A3D8773}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{A569D79A-E02E-4A3B-A87D-89776FAC316E}"
      DTS:ObjectName="(localdb)\mssqllocaldb.WeatherDamSM5P0J">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=(localdb)\mssqllocaldb;Initial Catalog=WeatherDamSM5P0J;Integrated Security=True;Application Name=SSIS-Package-{A569D79A-E02E-4A3B-A87D-89776FAC316E}(localdb)\mssqllocaldb.WeatherDamSM5P0J;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Entsoe-Dam-Price]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{1430F9B2-6E7E-4468-AB26-51B46CB4C153}"
      DTS:ObjectName="Entsoe-Dam-Price">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\SSIS\entsoe_price_result.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TimeIndex"
              DTS:DTSID="{C4E388E6-A366-43BE-BE65-9929D370C9B7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="5"
              DTS:TextQualified="True"
              DTS:ObjectName="Price"
              DTS:DTSID="{CD514F16-4368-4C5F-A9FF-50F5C8098EF2}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Error]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C5E88575-365D-46B6-9958-B2F0917C578F}"
      DTS:ObjectName="Error">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\SSIS\error.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="location_id"
              DTS:DTSID="{AA666EE1-5468-4E87-B66B-AE7E6EAC2BD5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="5"
              DTS:TextQualified="True"
              DTS:ObjectName="latitude"
              DTS:DTSID="{11E3CFCA-7B1A-428B-8254-8D217AFF77FE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="5"
              DTS:TextQualified="True"
              DTS:ObjectName="longitude"
              DTS:DTSID="{47B163AD-8A63-4526-BB6F-A51E625EEC08}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{E89AD953-128F-42FE-AB5D-06A3ACA0C718}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{0FA538B4-327A-40B9-8F1C-007CBA7C04F2}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Open-Meteo-Location]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A881FEEA-876A-4E73-9B14-268004815D5F}"
      DTS:ObjectName="Open-Meteo-Location">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\SSIS\om-locations.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="location_id"
              DTS:DTSID="{B98FE161-F4C0-451F-B30B-3AD6B05B4986}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="5"
              DTS:TextQualified="True"
              DTS:ObjectName="latitude"
              DTS:DTSID="{5ACE2097-A1A5-402E-AA49-CCCD2F44F935}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="5"
              DTS:TextQualified="True"
              DTS:ObjectName="longitude"
              DTS:DTSID="{E8BF2317-D076-4DCB-BBD0-55F2D6F57068}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="elevation"
              DTS:DTSID="{EEF96B90-FEDE-4EBC-82A9-274FA8504E60}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="utc_offset_seconds"
              DTS:DTSID="{2F00FEB4-6020-410F-B56C-7DCE2001D745}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="timezone"
              DTS:DTSID="{5D083FE4-E0ED-4276-9D08-67FDB10604FF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="timezone_abbreviation"
              DTS:DTSID="{9637203B-3C01-4752-8DA6-6DC73F169377}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Open-Meteo-Weather]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{5C90B2EB-68DC-4ADE-9901-8F7CB50F9724}"
      DTS:ObjectName="Open-Meteo-Weather">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\SSIS\om-weather.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="location_id"
              DTS:DTSID="{B851BE93-2C47-48E1-B07B-0A448133CB7E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="time"
              DTS:DTSID="{89D1D7E7-3B92-4A33-84E2-061273F6DAC6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="5"
              DTS:TextQualified="True"
              DTS:ObjectName="temperature_2m (Â°C)"
              DTS:DTSID="{4779F2EA-FA31-4E28-BE7B-BACD3FFC9585}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="relative_humidity_2m (%)"
              DTS:DTSID="{473C6B22-9E8F-49F7-82D8-0ADD9F8D0899}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72E4271F-B0C3-4B91-9D9F-E1D3CEA31B9E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentEnd">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{124F1935-6E34-4AB0-B9C6-03E70D5ECB7B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentStart">
      <DTS:VariableValue
        DTS:DataType="7">2/23/2025</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E5930C8-D7C4-40AC-B73E-9D420B2BD0CA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="endDate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3A169572-AE0A-4E08-93A5-9B49EEA09F5F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="loc_row_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{43F2ABE5-69B5-489D-882B-2D5A534DDEA1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="loopEnd">
      <DTS:VariableValue
        DTS:DataType="7">5/3/2025</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{917F967E-FF69-4E83-BCC3-D3B24901B7B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="loopStart">
      <DTS:VariableValue
        DTS:DataType="7">2/23/2025</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE1251DB-8326-41BA-8B06-39015E294B65}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="startDate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\For Loop Container"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{892C09F4-FD73-4884-8280-F7640A99E918}"
      DTS:EvalExpression="@[User::currentStart] &lt;= @[User::loopEnd]"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="For Loop Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Check Location Empty"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{27CC7036-B1DE-4FC2-BA1D-EF97F23ECA66}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check Location Empty"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A569D79A-E02E-4A3B-A87D-89776FAC316E}"
              SQLTask:SqlStatementSource="SELECT COUNT(*) FROM OMLocation;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::loc_row_count" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Download Entsoe Dam Price"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8D133464-DD79-4649-B5C6-5D84F6859A29}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Download Entsoe Dam Price"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_692ae2a850594e869f8a5d7033ef6ab3"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::endDate,User::startDate">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_692ae2a850594e869f8a5d7033ef6ab3.Properties.Settings.get_Default():ST_692ae2a850594e869f8a5d7033ef6ab3.Properties.Sett" +
    "ings")]

namespace ST_692ae2a850594e869f8a5d7033ef6ab3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_692ae2a850594e869f8a5d7033ef6ab3.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4300a46f-a406-471c-82ad-795e76d4ad50}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_692ae2a850594e869f8a5d7033ef6ab3</RootNamespace>
    <AssemblyName>ST_692ae2a850594e869f8a5d7033ef6ab3</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.IO;
using System.Net;
using System.Text;
using System.Windows.Forms;
#endregion

namespace ST_692ae2a850594e869f8a5d7033ef6ab3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string startDate = Dts.Variables["User::startDate"].Value.ToString();
            string endDate = Dts.Variables["User::endDate"].Value.ToString();

            string startDateTime = $"{startDate}T00:00:00.000Z";
            string endDateTime = $"{endDate}T23:59:59.000Z";

            try
            {
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

                var url = "https://newtransparency.entsoe.eu/market/energyPrices/load";
                var jsonPayload = $@"{{
                  ""dateTimeRange"": {{
                    ""from"": ""{startDateTime}"",
                    ""to"": ""{endDateTime}""
                  }},
                  ""areaList"": [""BZN|10Y1001A1001A46L""],
                  ""timeZone"": ""UTC"",
                  ""intervalPageInfo"": {{
                    ""itemIndex"": 0,
                    ""pageSize"": 10
                  }},
                  ""filterMap"": {{}}
                }}";

                Boolean fireAgain = true;
                Dts.Events.FireInformation(0, "Script Task", $"Start: {jsonPayload}", "", 0, ref fireAgain);


                var request = (HttpWebRequest)WebRequest.Create(url);
                request.Method = "POST";
                request.ContentType = "application/json";
                byte[] data = Encoding.UTF8.GetBytes(jsonPayload);
                request.ContentLength = data.Length;

                using (var stream = request.GetRequestStream())
                {
                    stream.Write(data, 0, data.Length);
                }

                using (var response = (HttpWebResponse)request.GetResponse())
                using (var reader = new StreamReader(response.GetResponseStream()))
                {
                    string result = reader.ReadToEnd();

                    // Save to file or variable
                    File.WriteAllText(@"C:\SSIS\entsoe_price_result.json", result);
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_692ae2a850594e869f8a5d7033ef6ab3</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_692ae2a850594e869f8a5d7033ef6ab3</msb:DisplayName>
    <msb:ProjectId>{8BF711AF-D3D6-410C-9B89-FA9E951031AD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_692ae2a850594e869f8a5d7033ef6ab3.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_692ae2a850594e869f8a5d7033ef6ab3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_692ae2a850594e869f8a5d7033ef6ab3")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_692ae2a850594e869f8a5d7033ef6ab3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_692ae2a850594e869f8a5d7033ef6ab3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_692ae2a850594e869f8a5d7033ef6ab3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_692ae2a850594e869f8a5d7033ef6ab3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_692ae2a850594e869f8a5d7033ef6ab3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_692ae2a850594e869f8a5d7033ef6ab3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJ+7I2gAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAASjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPg2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
NwAAAAAAAEgAAAACAAUA0CIAAHATAAABAAAAAAAAAEA2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwCnAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyIQAAcG8SAAAKbxMAAApvFAAACgZyPQAAcCgVAAAKC3JbAABw
KBUAAAoMIAAMAAAoFgAACnJ5AABwDRuNIAAAASUWcu8AAHCiJRcHoiUYcn4BAHCiJRkIoiUacr4B
AHCiKBcAAAoTBBcTBQIoEAAACm8YAAAKFnIpBABwckEEAHARBCgVAAAKclEEAHAWEgVvGQAACgko
GgAACnQPAAABEwYRBnJTBABwbxsAAAoRBnJdBABwbxwAAAooHQAAChEEbx4AAAoTBxEGEQeOaWpv
HwAAChEGbyAAAAoTCBEIEQcWEQeOaW8hAAAK3gwRCCwHEQhvIgAACtwRBm8jAAAKdBEAAAETCREJ
byQAAApzJQAAChMKEQpvJgAAChMLcn8EAHARCygnAAAK3gwRCiwHEQpvIgAACtzeDBEJLAcRCW8i
AAAK3AIoEAAAChZvKAAACt4nEwxywQQAcBEMbykAAAooFQAACigqAAAKJgIoEAAAChdvKAAACt4A
KgBBZAAAAgAAAAgBAAAQAAAAGAEAAAwAAAAAAAAAAgAAAEABAAAXAAAAVwEAAAwAAAAAAAAAAgAA
ADIBAAAzAAAAZQEAAAwAAAAAAAAAAAAAAFYAAAApAQAAfwEAACcAAAATAAABHgIoKwAACioeAigs
AAAKKq5+AQAABC0ectEEAHDQAwAAAigtAAAKby4AAApzLwAACoABAAAEfgEAAAQqGn4CAAAEKh4C
gAIAAAQqGn4DAAAEKh4CKDAAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAAC0BAAAI34AACAFAAAgBwAAI1N0cmluZ3MAAAAAQAwAAEQFAAAjVVMAhBEA
ABAAAAAjR1VJRAAAAJQRAADcAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAA
LgAAAAUAAAAGAAAACQAAAAEAAAAwAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAAB
AAAAAQAAAAAAJgQBAAAAAAAGALsCiAUGAEoDiAUGAAcCdQUPAPwFAAAGADQC7AQGAJ4C7AQGAH8C
7AQGADED7AQGANsC7AQGAPQC7AQGAEsC7AQGAGYCgQMKAA8D1QMKAFUB1QMOANkGpgYGAH8ENwAO
AIkBpgYGABQFNwAGAP4EjwQGAJYEjwQGAOoBdQUGAJ8GjwQGADAFqAUGAAgF1wQOALQBEAQOABsC
EAQOAHEBwgQGAM8BiAUKAP4D1QMSAD4G4AASAKIA4AAGAJ0DjwQOAEAFpgYOAAABpgYKAFQF1QMO
AN0GpgYGAHgD6AYGAKsAjwQOAI0BpgYGACEFNwAGANsANwAWAAYHWgYWAL0GWgYGACABjwQGALcA
jwQGABUH7AQAAAAALgAAAAAAAQABAAEAEACnBAEAOQABAAEAAAAQAK8FCwZZAAEAAwAAARAAUQYL
Bm0AAwAHAAMBAAB/BgAAUQAEAAoAEQCbBN4AEQBFAeIAEQCGAOYABgZgAOoAVoBvBu0AVoAlAe0A
UCAAAAAAhgCtBAYAAQBoIgAAAACGGGgFBgABAHAiAAAAAIMYaAUGAAEAeCIAAAAAkwgsBfEAAQCk
IgAAAACTCC0B9gABAKsiAAAAAJMIOQH7AAEAsyIAAAAAlgixBgEBAgC6IgAAAACGGGgFBgACAMIi
AAAAAJEYbgUGAQIAAAABAHIDCQBoBQEAEQBoBQYAGQBoBQoAKQBoBRAAMQBoBRAAOQBoBRAAQQBo
BRAASQBoBRAAUQBoBRAAWQBoBRAAYQBoBRAAaQBoBQYAqQBoBQYA0QBoBRUA4QBoBQYAcQB3BjEA
6QA6BjYA8QCGBDsA+QBoA0EAsQCbA0UAAQGYBkkACQFOBE8AAQGYBlYA6QCNBlwAGQGyBGIAIQGt
AW0AIQF7ABAAIQEVARAAKQElAHQAKQFIBnoAIQGkA4AAIQF1BIUAgQDJAYoAMQGlAQYAIQGZAZIA
OQFjBIUAkQBoBZgAQQFxAEUASQH0Bp4A6QDKBgEAmQCWAEUAUQEBB6QAcQBoBQYAsQBoBQYAYQHJ
AKsAYQERB7QAuQBoBboA2QBoBQYACAAUANQACAAYANkAKQBzAEEBLgALABkBLgATACIBLgAbAEEB
LgAjAEoBLgArAHMBLgAzAHMBLgA7AHMBLgBDAEoBLgBLAHkBLgBTAHMBLgBbAJABQwBjANkASQBz
AEEBYQB7ANkAYwBrANkAGwADAAEABAADAAAAMAUKAQAATQEPAQAAtQYUAQIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAMCQfpgAAAAAAAAEAAAAEAAAAAAAAAAAAAADCAGgAAAAAABAAAAAA
AAAAAAAAAMsAtgMAAAAABAAAAAAAAAAAAAAAwgCPBAAAAAAQAAAAAAAAAAAAAADLAEEAAAAAAAQA
AAAAAAAAAAAAAMIAWgYAAAAAAAAAAAEAAAC5BQAABQACAAAAAFNUXzY5MmFlMmE4NTA1OTRlODY5
ZjhhNWQ3MDMzZWY2YWIzAGdldF9VVEY4ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBSZWFkVG9FbmQAc2V0X01ldGhvZABk
ZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lAFNlY3VyaXR5UHJvdG9jb2xUeXBlAHNldF9Db250ZW50VHlwZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASHR0cFdlYlJlc3BvbnNlAEdldFJlc3BvbnNl
AERpc3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFdyaXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBz
ZXRfQ29udGVudExlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0u
Q29tcG9uZW50TW9kZWwAU1RfNjkyYWUyYTg1MDU5NGU4NjlmOGE1ZDcwMzNlZjZhYjMuZGxsAHNl
dF9TZWN1cml0eVByb3RvY29sAEdldFJlc3BvbnNlU3RyZWFtAEdldFJlcXVlc3RTdHJlYW0AZ2V0
X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24A
U3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rp
b24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNv
dXJjZU1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAC5jdG9y
AC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzY5MmFlMmE4NTA1OTRlODY5ZjhhNWQ3MDMzZWY2YWIzLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF82OTJhZTJhODUw
NTk0ZTg2OWY4YTVkNzAzM2VmNmFiMy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0Qnl0ZXMA
U2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAZ2V0X0V2ZW50cwBDb25jYXQAT2JqZWN0AFN5c3RlbS5OZXQAZ2V0X0RlZmF1bHQARGlhbG9n
UmVzdWx0AHNldF9UYXNrUmVzdWx0AEh0dHBXZWJSZXF1ZXN0AFN5c3RlbS5UZXh0AFdyaXRlQWxs
VGV4dABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAAAB9VAHMAZQByADoAOgBzAHQAYQBy
AHQARABhAHQAZQAAG1UAcwBlAHIAOgA6AGUAbgBkAEQAYQB0AGUAAB1UADAAMAA6ADAAMAA6ADAA
MAAuADAAMAAwAFoAAB1UADIAMwA6ADUAOQA6ADUAOQAuADAAMAAwAFoAAHVoAHQAdABwAHMAOgAv
AC8AbgBlAHcAdAByAGEAbgBzAHAAYQByAGUAbgBjAHkALgBlAG4AdABzAG8AZQAuAGUAdQAvAG0A
YQByAGsAZQB0AC8AZQBuAGUAcgBnAHkAUAByAGkAYwBlAHMALwBsAG8AYQBkAACAjXsADQAKACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACIAZABhAHQAZQBUAGkAbQBlAFIAYQBu
AGcAZQAiADoAIAB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IgBmAHIAbwBtACIAOgAgACIAAD8iACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAiAHQAbwAiADoAIAAiAACCaSIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAH0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IgBhAHIAZQBhAEwAaQBzAHQAIgA6ACAAWwAiAEIAWgBOAHwAMQAwAFkAMQAwADAAMQBBADEAMAAw
ADEAQQA0ADYATAAiAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IgB0AGkAbQBlAFoAbwBuAGUAIgA6ACAAIgBVAFQAQwAiACwADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACIAaQBuAHQAZQByAHYAYQBsAFAAYQBnAGUASQBuAGYAbwAiADoA
IAB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIgBpAHQAZQBt
AEkAbgBkAGUAeAAiADoAIAAwACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAiAHAAYQBnAGUAUwBpAHoAZQAiADoAIAAxADAADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgAH0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIgBmAGkAbAB0AGUAcgBNAGEAcAAiADoAIAB7AH0ADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAfQAAF1MAYwByAGkAcAB0ACAAVABhAHMAawAAD1MAdABhAHIAdAA6ACAA
AAEACVAATwBTAFQAACFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAHMAbwBuAABBQwA6AFwAUwBT
AEkAUwBcAGUAbgB0AHMAbwBlAF8AcAByAGkAYwBlAF8AcgBlAHMAdQBsAHQALgBqAHMAbwBuAAAP
RQByAHIAbwByADoAIAAAcVMAVABfADYAOQAyAGEAZQAyAGEAOAA1ADAANQA5ADQAZQA4ADYAOQBm
ADgAYQA1AGQANwAwADMAMwBlAGYANgBhAGIAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAPofNAnCi7JOphCOC++nXPQABCABAQgDIAABBSABARERBCABAQ4FIAEB
EWUVBw0ODg4ODgISPR0FEkESRRJJDhJNBCAAEnUEIAASeQUgARJ9HAMgABwDIAAOBQACDg4OBgAB
ARGAiQUAAQ4dDgUgABKAjQogBgEIDg4OCBACBgABEoCRDgUAABKAlQUgAR0FDgQgAQEKBCAAEkEH
IAMBHQUICAUgABKAnQUgAQESQQUAAgEODgYAARGArQ4IAAESgLERgLUFIAASgLkHIAIBDhKAuQi3
elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJdAwYSYQMGEhACBggDBhEUBAAAEl0EAAASYQUA
AQESYQQAABIQAwAAAQQIABJdBAgAEmEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNjkyYWUyYTg1MDU5NGU4NjlmOGE1ZDcwMzNlZjZh
YjMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAAAgNwAAAAAAAAAAAAA6NwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALDcAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAB+mMCQAAAEAH6YwJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8ANgA5ADIAYQBlADIAYQA4ADUAMAA1ADkANABlADgANgA5AGYAOABhADUAZAA3ADAAMwAz
AGUAZgA2AGEAYgAzAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA2ADQALgA0ADIANQAyADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8ANgA5ADIAYQBlADIAYQA4ADUAMAA1ADkANABlADgANgA5AGYAOABhADUAZAA3ADAAMwAzAGUA
ZgA2AGEAYgAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA2ADkAMgBhAGUAMgBhADgANQAwADUAOQA0AGUAOAA2ADkAZgA4AGEANQBkADcA
MAAzADMAZQBmADYAYQBiADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANgA5ADIAYQBlADIAYQA4ADUAMAA1ADkANABlADgANgA5AGYAOABhADUAZAA3ADAA
MwAzAGUAZgA2AGEAYgAzAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANgA0AC4ANAAyADUAMgA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANgA0AC4ANAAyADUAMgA3AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Download Open Meteo Data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{D1C12E1F-B1D6-4A39-8A92-C578B0741DF4}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Download Open Meteo Data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f948f4a3fe634852872b9bfbf865849f"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::currentEnd,User::currentStart,User::endDate,User::loopEnd,User::loopStart,User::startDate">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f948f4a3fe634852872b9bfbf865849f.Properties.Settings.get_Default():ST_f948f4a3fe634852872b9bfbf865849f.Properties.Sett" +
    "ings")]

namespace ST_f948f4a3fe634852872b9bfbf865849f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_f948f4a3fe634852872b9bfbf865849f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C5E0520A-2526-4A0E-B4F0-603CD2AF2C5F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f948f4a3fe634852872b9bfbf865849f</RootNamespace>
    <AssemblyName>ST_f948f4a3fe634852872b9bfbf865849f</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Net;
using System.Windows.Forms;
#endregion

namespace ST_f948f4a3fe634852872b9bfbf865849f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            var hungaryCoordinates = new List<(double Latitude, double Longitude)>
            {
                (48.100, 19.800),   // Salgótarján
                (47.687, 17.650),   // Győr
                (46.840, 16.850),   // Zalaegerszeg
                (46.460, 16.980),   // Nagykanizsa
                (46.080, 18.230),   // Pécs
                (46.250, 20.150),   // Szeged
                (47.530, 21.630),   // Debrecen
                (48.103, 20.778),   // Miskolc
                (47.783, 19.133),   // Vác
                (47.497, 19.040),   // Budapest
                (47.183, 20.200),   // Szolnok
                (46.907, 19.691),   // Kecskemét
                (47.000, 17.500),   // Pápa
                (47.350, 18.900),   // Tatabánya
                (47.800, 18.100),   // Esztergom
                (46.366, 17.783),   // Kaposvár
                (47.200, 16.616),   // Sárvár
                (46.983, 20.383),   // Békéscsaba
                (47.250, 20.150),   // Karcag
                (47.600, 20.500),   // Mezőtúr
                (46.683, 21.083),   // Orosháza
                (48.000, 21.700),   // Sátoraljaújhely
                (46.767, 18.383),   // Dombóvár
                (47.733, 21.083),   // Hajdúböszörmény
            };

            string startDate = Dts.Variables["User::startDate"].Value.ToString();
            string endDate = Dts.Variables["User::endDate"].Value.ToString();

            Boolean fireAgain = true;

            Dts.Events.FireInformation(0, "Script Task", $"Start: {startDate}", "", 0, ref fireAgain);
            Dts.Events.FireInformation(0, "Script Task", $"End: {endDate}", "", 0, ref fireAgain);

            string latitudeString = string.Join(",", hungaryCoordinates.Select(c => c.Latitude.ToString("F3")));
            string longitudeString = string.Join(",", hungaryCoordinates.Select(c => c.Longitude.ToString("F3")));

            string url = $"https://api.open-meteo.com/v1/forecast?latitude={latitudeString}&longitude={longitudeString}&hourly=temperature_2m,relative_humidity_2m&start_date={startDate}&end_date={endDate}&format=csv";
            Dts.Events.FireInformation(0, "Script Task", $"URL: {url}", "", 0, ref fireAgain);

            string folderPath = @"C:\SSIS";
            string localPath = Path.Combine(folderPath, "open-meteo.csv");

            try
            {
                System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

                if (!Directory.Exists(folderPath))
                    Directory.CreateDirectory(folderPath);

                using (WebClient client = new WebClient())
                {
                    // If authentication is needed, uncomment below:
                    // client.Headers.Add("Authorization", "Bearer your_token_here");

                    client.DownloadFile(url, localPath);
                }


                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // Log error to SSIS output
                Dts.Events.FireError(0, "Script Task", ex.Message + "\n" + ex.StackTrace, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f948f4a3fe634852872b9bfbf865849f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f948f4a3fe634852872b9bfbf865849f</msb:DisplayName>
    <msb:ProjectId>{4D14EE49-14CC-4ADB-8EDF-92D844FA8042}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f948f4a3fe634852872b9bfbf865849f.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f948f4a3fe634852872b9bfbf865849f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f948f4a3fe634852872b9bfbf865849f")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f948f4a3fe634852872b9bfbf865849f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f948f4a3fe634852872b9bfbf865849f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f948f4a3fe634852872b9bfbf865849f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f948f4a3fe634852872b9bfbf865849f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f948f4a3fe634852872b9bfbf865849f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f948f4a3fe634852872b9bfbf865849f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN0WJWgAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAwjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHA4AABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAyBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACk
OAAAAAAAAEgAAAACAAUA3CUAANwRAAABAAAAAAAAALg3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwDKBAAAAQAAEXMRAAAKJSPNzMzMzAxIQCPNzMzMzMwz
QHMSAAAKbxMAAAolIw4tsp3v10dAI2ZmZmZmpjFAcxIAAApvEwAACiUj7FG4HoVrR0AjmpmZmZnZ
MEBzEgAACm8TAAAKJSN7FK5H4TpHQCN7FK5H4fowQHMSAAAKbxMAAAolIwrXo3A9CkdAI3sUrkfh
OjJAcxIAAApvEwAACiUjAAAAAAAgR0AjZmZmZmYmNEBzEgAACm8TAAAKJSOkcD0K18NHQCPhehSu
R6E1QHMSAAAKbxMAAAolI3e+nxovDUhAI7pJDAIrxzRAcxIAAApvEwAACiUjTmIQWDnkR0AjNV66
SQwiM0BzEgAACm8TAAAKJSNWDi2ynb9HQCMK16NwPQozQHMSAAAKbxMAAAolI4GVQ4tsl0dAIzMz
MzMzMzRAcxIAAApvEwAACiUjarx0kxh0R0AjN4lBYOWwM0BzEgAACm8TAAAKJSMAAAAAAIBHQCMA
AAAAAIAxQHMSAAAKbxMAAAolI83MzMzMrEdAI2ZmZmZm5jJAcxIAAApvEwAACiUjZmZmZmbmR0Aj
mpmZmZkZMkBzEgAACm8TAAAKJSMCK4cW2S5HQCOcxCCwcsgxQHMSAAAKbxMAAAolI5qZmZmZmUdA
IwRWDi2ynTBAcxIAAApvEwAACiUj5/up8dJ9R0AjNV66SQxiNEBzEgAACm8TAAAKJSMAAAAAAKBH
QCNmZmZmZiY0QHMSAAAKbxMAAAolI83MzMzMzEdAIwAAAAAAgDRAcxIAAApvEwAACiUjgZVDi2xX
R0AjaJHtfD8VNUBzEgAACm8TAAAKJSMAAAAAAABIQCMzMzMzM7M1QHMSAAAKbxMAAAolIxkEVg4t
YkdAIzVeukkMYjJAcxIAAApvEwAACiUj5/up8dLdR0AjaJHtfD8VNUBzEgAACm8TAAAKCgIoFAAA
Cm8VAAAKcgEAAHBvFgAACm8XAAAKbxgAAAoLAigUAAAKbxUAAApyIQAAcG8WAAAKbxcAAApvGAAA
CgwXDQIoFAAACm8ZAAAKFnI9AABwclUAAHAHKBoAAApyZQAAcBYSA28bAAAKAigUAAAKbxkAAAoW
cj0AAHByZwAAcAgoGgAACnJlAABwFhIDbxsAAApycwAAcAZ+CAAABCUtFyZ+BwAABP4GDAAABnMc
AAAKJYAIAAAEKAEAACsoHgAAChMEcnMAAHAGfgkAAAQlLRcmfgcAAAT+Bg0AAAZzHAAACiWACQAA
BCgBAAArKB4AAAoTBR8JjSIAAAElFnJ3AABwoiUXEQSiJRhy2QAAcKIlGREFoiUacvEAAHCiJRsH
oiUccmEBAHCiJR0IoiUecncBAHCiKB8AAAoTBgIoFAAACm8ZAAAKFnI9AABwco8BAHARBigaAAAK
cmUAAHAWEgNvGwAACnKbAQBwEwcRB3KrAQBwKCAAAAoTCCAADAAAKCEAAAoRBygiAAAKLQgRBygj
AAAKJnMkAAAKEwkRCREGEQhvJQAACt4MEQksBxEJbyYAAArcAigUAAAKFm8nAAAK3kUTCgIoFAAA
Cm8ZAAAKFnI9AABwEQpvKAAACnLJAQBwEQpvKQAACigqAAAKcmUAAHAWbysAAAomAigUAAAKF28n
AAAK3gAqAAABHAAAAgBdBA1qBAwAAAAAAAA7BEmEBEUSAAABHgIoLAAACioeAigtAAAKKq5+AQAA
BC0ecs0BAHDQAwAAAiguAAAKby8AAApzMAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKDEAAAoqLnMIAAAGgAMAAAQqLnMLAAAGgAcAAAQqSg8BfDIAAApyPwIAcCgzAAAKKkoP
AXw0AAAKcj8CAHAoMwAACipCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABkBQAA
I34AANAFAABEBwAAI1N0cmluZ3MAAAAAFA0AAEgCAAAjVVMAXA8AABAAAAAjR1VJRAAAAGwPAABw
AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAALgAAAAYAAAAJAAAADQAAAAMA
AAA0AAAAAgAAABUAAAABAAAAAgAAAAMAAAAEAAAAAwAAAAEAAAAFAAAAAQAAAAIAAAABAAAAAACZ
BAEAAAAAAAYAIAPpBQYArwPpBQYAUQLWBQ8AXQYAAAYAfgJBBQYA6AJBBQYAyQJBBQYAlgNBBQYA
QANBBQYAWQNBBQYAlQJBBQYAsAIBBAoAdANIBAoAyAFIBAYAOwCtAAYATwDfBA4AHQf3BgYAUwXf
BAYA5gTfBAYAGQLpBQYA6QbfBAYABQPpBQYASADfBAYANALWBQYAhwUJBgYAXQUsBQ4ABAKDBA4A
ZQKDBA4A5AEXBQoAcQRIBBIAnwZPARIA9wBPAQoAqwVIBAYAHQTfBBYAAAF3BQYALQCtAAYAJARv
AA4AlwX3Bg4AdwH3BgYAOgdvAAYAaQVvAAYACwHfBAYAhwHfBAYAHgHfBAYAKwdBBQYAFwHfBAAA
AABmAAAAAAABAAEAAQAQAPcE3QM5AAEAAQAAABAAEAZsBlUAAQADAAABEACpBmwGdQADAAcAAwEA
AMIGAABNAAQACgADIRAAqQAAAFUABwAKABEA6wQ6AREAuAE+AREA2wBCAQYGmABGAVaAsgZJAVaA
mAFJATYAYgBNARYAAQBRARYAFwBRAVAgAAAAAIYA/QQGAAEARCUAAAAAhhjJBQYAAQBMJQAAAACD
GMkFBgABAFQlAAAAAJMIgwVeAQEAgCUAAAAAkwigAWMBAQCHJQAAAACTCKwBaAEBAI8lAAAAAJYI
AgduAQIAliUAAAAAhhjJBQYAAgCeJQAAAACRGM8FcwECAKolAAAAAJEYzwVzAQIATCUAAAAAhhjJ
BQYAAgC2JQAAAACDAAoAdwECAMklAAAAAIMAIAB3AQMAAAABANcDAAABAMYAAAABAMYACQDJBQEA
EQDJBQYAGQDJBQoAKQDJBRAAMQDJBRAAOQDJBRAAQQDJBRAASQDJBRAAUQDJBRAAWQDJBRAAYQDJ
BRAAaQDJBQYAoQDJBQYAsQDJBRUAwQDJBQYA4QDJBRsADADJBQYAFADJBUwADADIAFQAcQC6BloA
8QCbBl8A+QDWBGQAAQHNA2sAqQAbBG8A8QDQBnMAEQHiBnkACQEHBX8AHADJBZYAGQHwBpwAEQEC
BcAAEQHiBssAKQFvAXkAMQHBBNEAQQHbBtgAQQE0B90AiQDJBQYAiQBCAeQAUQH8AQYA8QAOBwEA
kQDrAG8AkQDMAG8AEQHiBuoACQG/BfEAcQDJBQYAqQDJBQYAWQEwAfoAWQEnBwMByQDJBQkB6QDJ
BQYAFABCABEBcQEbBBUBFABcABoBCAAUADABCAAYADUBKQCDALgBLgALAJABLgATAJkBLgAbALgB
LgAjAMEBLgArAOoBLgAzAOoBLgA7AOoBLgBDAMEBLgBLAPABLgBTAOoBLgBbAAcCQwBjADUBRABz
AFECSQCDALgBYQBrADUBYwB7ADUBZABzAFECwwBrADUBAQFzAFECIQFzAFECIQADAAEABAADAAAA
hwWBAQAAwAGGAQAABgeLAQIABAADAAIABQAFAAEABgAFAAIABwAHADoARQCKAASAAAABAAAAMiQ+
AgAAAAAAAN0DAAAEAAAAAAAAAAAAAAAeAaAAAAAAABAAAAAAAAAAAAAAACcBKQQAAAAABAAAAAAA
AAAAAAAAHgHfBAAAAAAQAAAAAAAAAAAAAAAnAXkAAAAAAAQAAAAAAAAAAAAAAB4BjAEAAAAAAAAA
AAEAAAAaBgAABQACAAYAAgA7ALYAAAAAPD45X18wXzAAPE1haW4+Yl9fMF8wADw+OV9fMF8xADxN
YWluPmJfXzBfMQBJRW51bWVyYWJsZWAxAExpc3RgMQBJdGVtMQBGdW5jYDIAVmFsdWVUdXBsZWAy
AEl0ZW0yADw+OQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABn
ZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUARW51bWVy
YWJsZQBJRGlzcG9zYWJsZQBEb3VibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUARG93bmxvYWRGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29tYmluZQBT
ZWN1cml0eVByb3RvY29sVHlwZQBTeXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAFR1
cGxlRWxlbWVudE5hbWVzQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFNUX2Y5NDhmNGEzZmU2
MzQ4NTI4NzJiOWJmYmY4NjU4NDlmAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcA
UGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU1RfZjk0OGY0YTNmZTYzNDg1Mjg3MmI5YmZiZjg2NTg0OWYuZGxsAHNldF9TZWN1cml0eVBy
b3RvY29sAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4ASm9pbgBG
aXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAERpcmVjdG9yeUluZm8AU3lz
dGVtLkxpbnEAZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAEV2ZW50c09i
amVjdFdyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Y5NDhmNGEz
ZmU2MzQ4NTI4NzJiOWJmYmY4NjU4NDlmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBE
ZWJ1Z2dpbmdNb2RlcwBTVF9mOTQ4ZjRhM2ZlNjM0ODUyODcyYjliZmJmODY1ODQ5Zi5Qcm9wZXJ0
aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMA
Z2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0AE9iamVjdABTZWxlY3QAU3lzdGVtLk5ldABnZXRfRGVm
YXVsdABzZXRfVGFza1Jlc3VsdABXZWJDbGllbnQAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9y
eQAAH1UAcwBlAHIAOgA6AHMAdABhAHIAdABEAGEAdABlAAAbVQBzAGUAcgA6ADoAZQBuAGQARABh
AHQAZQAAF1MAYwByAGkAcAB0ACAAVABhAHMAawAAD1MAdABhAHIAdAA6ACAAAAEAC0UAbgBkADoA
IAAAAywAAGFoAHQAdABwAHMAOgAvAC8AYQBwAGkALgBvAHAAZQBuAC0AbQBlAHQAZQBvAC4AYwBv
AG0ALwB2ADEALwBmAG8AcgBlAGMAYQBzAHQAPwBsAGEAdABpAHQAdQBkAGUAPQABFyYAbABvAG4A
ZwBpAHQAdQBkAGUAPQAAbyYAaABvAHUAcgBsAHkAPQB0AGUAbQBwAGUAcgBhAHQAdQByAGUAXwAy
AG0ALAByAGUAbABhAHQAaQB2AGUAXwBoAHUAbQBpAGQAaQB0AHkAXwAyAG0AJgBzAHQAYQByAHQA
XwBkAGEAdABlAD0AABUmAGUAbgBkAF8AZABhAHQAZQA9AAAXJgBmAG8AcgBtAGEAdAA9AGMAcwB2
AAALVQBSAEwAOgAgAAAPQwA6AFwAUwBTAEkAUwAAHW8AcABlAG4ALQBtAGUAdABlAG8ALgBjAHMA
dgABAwoAAHFTAFQAXwBmADkANAA4AGYANABhADMAZgBlADYAMwA0ADgANQAyADgANwAyAGIAOQBi
AGYAYgBmADgANgA1ADgANAA5AGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAVGADMAAAAAAMcnR8gsclxNn6DaITJZxrAABCABAQgDIAABBSABARERBCABAQ4FIAEB
HQ4FIAEBEW0YBwsVEj0BFRFBAg0NDg4CDg4ODg4SRRJJChUSPQEVEUECDQ0GFRFBAg0NByACARMA
EwEFIAEBEwAEIAASeQQgABJ9BiABEoCBHAMgABwDIAAOBSAAEoCFBQACDg4OCiAGAQgODg4IEAIL
FRJdAhURQQINDQ4FIAIBHBgZEAICFRKAkQEeARUSgJEBHgAVEl0CHgAeAQkKAhURQQINDQ4KAAIO
DhUSgJEBDgUAAQ4dDgYAAQERgJ0EAAECDgYAARKApQ4FIAIBDg4GAAMODg4OCCAFAggODg4ICAAB
EoCtEYCxBSAAEoC1ByACAQ4SgLUDBhMABCABDg4DBhMBCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAMGEmUDBhJpAwYSEAIGCAMGERQDBhIYDAYVEl0CFRFBAg0NDgQAABJlBAAAEmkFAAEBEmkE
AAASEAMAAAEJIAEOFRFBAg0NBAgAEmUECAASaQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mOTQ4ZjRhM2ZlNjM0ODUyODcyYjliZmJm
ODY1ODQ5ZgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNxsB
AAIAAAAITGF0aXR1ZGUJTG9uZ2l0dWRlAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAmDgAAAAAAAAAAAAAsjgA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQ4AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAOBAAAAAAAAAAAAAAOBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAPgIyJAAAAQA+AjIkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEbgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAASgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBmADkANAA4AGYANABhADMAZgBlADYAMwA0ADgANQAyADgANwAyAGIAOQBiAGYAYgBmADgA
NgA1ADgANAA5AGYAAAA6AA0AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAy
ADYANgAuADUANwA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGYA
OQA0ADgAZgA0AGEAMwBmAGUANgAzADQAOAA1ADIAOAA3ADIAYgA5AGIAZgBiAGYAOAA2ADUAOAA0
ADkAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AZgA5ADQAOABmADQAYQAzAGYAZQA2ADMANAA4ADUAMgA4ADcAMgBiADkAYgBmAGIAZgA4
ADYANQA4ADQAOQBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGYAOQA0ADgAZgA0AGEAMwBmAGUANgAzADQAOAA1ADIAOAA3ADIAYgA5AGIAZgBiAGYAOAA2
ADUAOAA0ADkAZgAAAD4ADQABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
OQAyADYANgAuADUANwA0AAAAAABCAA0AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA5ADIANgA2AC4ANQA3ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAxDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Increment Time Interval"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{FD7DEBE4-B42A-47E9-944F-8A6471C2C10E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Increment Time Interval"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::currentEnd,User::currentStart,User::endDate,User::loopEnd,User::loopStart,User::startDate">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties.Settings.get_Default():ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties.Sett" +
    "ings")]

namespace ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_125f9ca4174c4ab49ca5f00e9d2ad2aa
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            DateTime start = (DateTime)Dts.Variables["User::currentStart"].Value;
            DateTime finalEnd = (DateTime)Dts.Variables["User::loopEnd"].Value;

            DateTime end = start.AddDays(6);
            if (end > finalEnd) end = finalEnd;

            string startDate = start.ToString("yyyy-MM-dd");
            string endDate = end.ToString("yyyy-MM-dd");

            Boolean fireAgain = true;

            Dts.Variables["User::startDate"].Value = startDate;
            Dts.Variables["User::endDate"].Value = endDate;
            Dts.Variables["User::currentEnd"].Value = end;


            Dts.Events.FireInformation(0, "Script Task", $"Start: {startDate}", "", 0, ref fireAgain);
            Dts.Events.FireInformation(0, "Script Task", $"End: {endDate}", "", 0, ref fireAgain);


            DateTime newStart = start.AddDays(7);
            Dts.Variables["User::currentStart"].Value = newStart;

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_125f9ca4174c4ab49ca5f00e9d2ad2aa</msb:CodeName>
    <msb:DisplayName>ST_125f9ca4174c4ab49ca5f00e9d2ad2aa</msb:DisplayName>
    <msb:ProjectId>{FEF851B9-990E-4EE4-8D9C-A21E0969718C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_125f9ca4174c4ab49ca5f00e9d2ad2aa")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_125f9ca4174c4ab49ca5f00e9d2ad2aa")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{14815263-a90d-4102-8a6f-056b6b0e997a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_125f9ca4174c4ab49ca5f00e9d2ad2aa</RootNamespace>
    <AssemblyName>ST_125f9ca4174c4ab49ca5f00e9d2ad2aa</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_125f9ca4174c4ab49ca5f00e9d2ad2aa.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC4XJWgAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAWjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAgwAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
MAAAAAAAAEgAAAACAAUAKCIAACgNAAABAAAAAAAAAFAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwBkAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpQ8AAAEKAigQAAAKbxEAAApyJwAAcG8SAAAKbxMAAAqlDwAAAQsSACMAAAAAAAAYQCgUAAAK
DAgHKBUAAAosAgcMEgByQwAAcCgWAAAKDRICckMAAHAoFgAAChMEFxMFAigQAAAKbxEAAApyWQAA
cG8SAAAKCW8XAAAKAigQAAAKbxEAAApyeQAAcG8SAAAKEQRvFwAACgIoEAAACm8RAAAKcpUAAHBv
EgAACgiMDwAAAW8XAAAKAigQAAAKbxgAAAoWcrcAAHByzwAAcAkoGQAACnLfAABwFhIFbxoAAAoC
KBAAAApvGAAAChZytwAAcHLhAABwEQQoGQAACnLfAABwFhIFbxoAAAoSACMAAAAAAAAcQCgUAAAK
EwYCKBAAAApvEQAACnIBAABwbxIAAAoRBowPAAABbxcAAAoCKBAAAAoWbxsAAAoqHgIoHAAACioe
AigdAAAKKq5+AQAABC0ecu0AAHDQAwAAAigeAAAKbx8AAApzIAAACoABAAAEfgEAAAQqGn4CAAAE
Kh4CgAIAAAQqGn4DAAAEKh4CKCEAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAAC8BQAAI1N0cmluZ3MAAAAAHAoAAGABAAAjVVMA
fAsAABAAAAAjR1VJRAAAAIwLAACcAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAAB
AAAAIAAAAAUAAAAGAAAACQAAAAEAAAAhAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQA
AAABAAAAAQAAAAAAiAMBAAAAAAAGAC4CiwQGAL0CiwQGAHoBeAQPAP8EAAAGAKcBJQQGABECJQQG
APIBJQQGAKQCJQQGAE4CJQQGAGcCJQQGAL4BJQQGANkB9QIKAIICNwMKAPkANwMGAJsAuQMGAMAD
uQMGAF0BeAQGAIwFuQMGAEcEqwQGADcEEAQOAC0BcgMOAI4BcgMOABUB+wMGAEIBiwQKAGADNwMS
AEEFpAASAG4ApAAKAFcENwMGABEDuQMGAMQAuQMGAHcAuQMGALIFJQQAAAAAAQAAAAAAAQABAAEA
EADgAzEAOQABAAEAAAAQALIEDgVJAAEAAwAAARAASwUOBV0AAwAHAAMBAABkBQAAQQAEAAoAEQDF
A5wAEQDpAKAAEQBeAKQABgYpAKgAVoBUBasAVoDJAKsAUCAAAAAAhgDmAwYAAQDAIQAAAACGGGsE
BgABAMghAAAAAIMYawQGAAEA0CEAAAAAkwhDBK8AAQD8IQAAAACTCNEAtAABAAMiAAAAAJMI3QC5
AAEACyIAAAAAlgiTBb8AAgASIgAAAACGGGsEBgACABoiAAAAAJEYcQTEAAIAAAABAO8CCQBrBAEA
EQBrBAYAGQBrBAoAKQBrBBAAMQBrBBAAOQBrBBAAQQBrBBAASQBrBBAAUQBrBBAAWQBrBBAAYQBr
BBAAaQBrBAYAiQBrBAYAsQBrBBUAwQBrBAYAcQBcBSkAyQA9BS4A0QCwAzMA2QDbAjkAeQB9BT0A
eQDRA0MAeQAPA0sA2QDlAlAAyQByBVUA6QCFBVoA4QDrA2AAyQCfBQEAcQBrBAYAkQBrBAYA8QCJ
AGsA8QCuBXIAmQBrBHgAuQBrBAYACAAUAJIACAAYAJcAKQBzAP8ALgALANcALgATAOAALgAbAP8A
LgAjAAgBLgArADEBLgAzADEBLgA7ADEBLgBDAAgBLgBLADcBLgBTADEBLgBbAE4BQwBjAJcASQBz
AP8AYQB7AJcAYwBrAJcAGwADAAEABAADAAAARwTIAAAA8QDNAAAAlwXSAAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAAMiRnAgAAAAAAADEAAAAEAAAAAAAAAAAAAACAAFUAAAAAABAAAAAA
AAAAAAAAAIkAGAMAAAAABAAAAAAAAAAAAAAAgAC5AwAAAAAQAAAAAAAAAAAAAACJAAoAAAAAAAAA
AAABAAAAvAQAAAUAAgAAAAAAADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERU
UwB2YWx1ZV9fAFNUXzEyNWY5Y2E0MTc0YzRhYjQ5Y2E1ZjAwZTlkMmFkMmFhAG1zY29ybGliAGRl
ZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUXzEyNWY5Y2E0MTc0YzRhYjQ5Y2E1ZjAwZTlkMmFkMmFhLmRsbABnZXRfSXRl
bQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBvcF9HcmVhdGVyVGhhbgBTY3JpcHRNYWluAEZpcmVJ
bmZvcm1hdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVj
dFdyYXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMTI1ZjljYTQxNzRjNGFiNDljYTVm
MDBlOWQyYWQyYWEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUXzEyNWY5Y2E0MTc0YzRhYjQ5Y2E1ZjAwZTlkMmFkMmFhLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEFk
ZERheXMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1i
bHkAAAAlVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABTAHQAYQByAHQAABtVAHMAZQByADoAOgBs
AG8AbwBwAEUAbgBkAAAVeQB5AHkAeQAtAE0ATQAtAGQAZAABH1UAcwBlAHIAOgA6AHMAdABhAHIA
dABEAGEAdABlAAAbVQBzAGUAcgA6ADoAZQBuAGQARABhAHQAZQAAIVUAcwBlAHIAOgA6AGMAdQBy
AHIAZQBuAHQARQBuAGQAABdTAGMAcgBpAHAAdAAgAFQAYQBzAGsAAA9TAHQAYQByAHQAOgAgAAAB
AAtFAG4AZAA6ACAAAHFTAFQAXwAxADIANQBmADkAYwBhADQAMQA3ADQAYwA0AGEAYgA0ADkAYwBh
ADUAZgAwADAAZQA5AGQAMgBhAGQAMgBhAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAABQHiPn7yDUTL+VZZakZREeAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFV
DQcHET0RPRE9Dg4CET0EIAASZQQgABJpBSABEm0cAyAAHAUgARE9DQcAAgIRPRE9BCABDg4EIAEB
HAQgABJxBQACDg4OCiAGAQgODg4IEAIGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRd
zYCAzJEEAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQAABJNBAAAElEFAAEBElEEAAASEAMA
AAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzEyNWY5Y2E0MTc0YzRhYjQ5Y2E1ZjAwZTlkMmFkMmFhAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjUAAE0BABwuTkVURnJhbWV3b3JrLFZlcnNpb249djQuNy4yAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29yayA0LjcuMrQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAw
MAAAAAAAAAAAAABKMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDAAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAADgQAAAAAAAAAAAAADgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAGcCMiQAAAEAZwIyJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBG4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEoDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMQAyADUAZgA5AGMAYQA0ADEANwA0AGMANABhAGIANAA5AGMAYQA1AGYAMAAwAGUA
OQBkADIAYQBkADIAYQBhAAAAOgANAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADkAMgA2ADYALgA2ADEANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwAxADIANQBmADkAYwBhADQAMQA3ADQAYwA0AGEAYgA0ADkAYwBhADUAZgAwADAAZQA5AGQAMgBh
AGQAMgBhAGEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADEAMgA1AGYAOQBjAGEANAAxADcANABjADQAYQBiADQAOQBjAGEANQBmADAAMABl
ADkAZAAyAGEAZAAyAGEAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwAxADIANQBmADkAYwBhADQAMQA3ADQAYwA0AGEAYgA0ADkAYwBhADUAZgAwADAAZQA5
AGQAMgBhAGQAMgBhAGEAAAA+AA0AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADkAMgA2ADYALgA2ADEANQAAAAAAQgANAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOQAyADYANgAuADYAMQA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFwwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Load DAM Price"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{712AB29B-2E84-4A2B-9511-E15C48F5C3C5}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load DAM Price"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\For Loop Container\Load DAM Price\Add Date"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add Date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load DAM Price\Add Date.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add Date.Inputs[Derived Column Input].Columns[dateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="dateTime"
                          lineageId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Output].Columns[dateTime]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Add Date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Output].Columns[date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Output].Columns[date]"
                          name="date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBDATE)#{Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Output].Columns[dateTime]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBDATE)dateTime</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Add Date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load DAM Price\Add DateTime"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add DateTime"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load DAM Price\Add DateTime.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add DateTime.Inputs[Derived Column Input].Columns[TimeIndex]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TimeIndex"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[TimeIndex]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Add DateTime.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Output].Columns[dateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Output].Columns[dateTime]"
                          name="dateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)([REPLACE](#{Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[TimeIndex]},"T"," "))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)(REPLACE(TimeIndex,"T"," "))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Add DateTime.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load DAM Price\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load DAM Price\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Aggregate.Inputs[Aggregate Input 1].Columns[date]"
                          cachedDataType="dbDate"
                          cachedName="date"
                          lineageId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Output].Columns[date]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Aggregate.Inputs[Aggregate Input 1].Columns[Price]"
                          cachedDataType="r8"
                          cachedName="Price"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[Price]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1].Columns[date]"
                          dataType="dbDate"
                          lineageId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1].Columns[date]"
                          name="date">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Output].Columns[date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1].Columns[Price]"
                          dataType="r8"
                          lineageId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1].Columns[Price]"
                          name="Price">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[Price]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">5</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load DAM Price\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load DAM Price\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Entsoe-Dam-Price]"
                      connectionManagerRefId="Package.ConnectionManagers[Entsoe-Dam-Price]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[TimeIndex]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TimeIndex]"
                          length="50"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[TimeIndex]"
                          name="TimeIndex"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[Price]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Price]"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[Price]"
                          name="Price"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TimeIndex]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="TimeIndex" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Price]"
                          dataType="r8"
                          name="Price" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="Load Avg Dam Price"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."EntoseAvgDamPrice"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      connectionManagerRefId="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input].Columns[date]"
                          cachedDataType="dbDate"
                          cachedName="date"
                          externalMetadataColumnId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          lineageId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1].Columns[date]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input].Columns[Price]"
                          cachedDataType="r8"
                          cachedName="Price"
                          externalMetadataColumnId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[dam_price]"
                          lineageId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1].Columns[Price]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          dataType="dbTimeStamp"
                          name="datetime" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[dam_price]"
                          dataType="numeric"
                          name="dam_price"
                          precision="5"
                          scale="2" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load DAM Price\Load Dam Price"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="Load Dam Price"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."EntoseDamPrice"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      connectionManagerRefId="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input].Columns[dateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="dateTime"
                          externalMetadataColumnId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          lineageId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Output].Columns[dateTime]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input].Columns[Price]"
                          cachedDataType="r8"
                          cachedName="Price"
                          externalMetadataColumnId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[dam_price]"
                          lineageId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output].Columns[Price]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          dataType="dbTimeStamp"
                          name="datetime" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input].ExternalColumns[dam_price]"
                          dataType="numeric"
                          name="dam_price"
                          precision="5"
                          scale="2" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Load Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load DAM Price\Load Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load DAM Price\Load Dam Price.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load DAM Price\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load DAM Price\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load DAM Price\Multicast.Outputs[Multicast Output 3]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\For Loop Container\Load DAM Price\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\For Loop Container\Load DAM Price.Paths[Aggregate Output 1]"
                  endId="Package\For Loop Container\Load DAM Price\Load Avg Dam Price.Inputs[ADO NET Destination Input]"
                  name="Aggregate Output 1"
                  startId="Package\For Loop Container\Load DAM Price\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\For Loop Container\Load DAM Price.Paths[Derived Column Output]"
                  endId="Package\For Loop Container\Load DAM Price\Add Date.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\For Loop Container\Load DAM Price\Add DateTime.Outputs[Derived Column Output]" />
                <path
                  refId="Package\For Loop Container\Load DAM Price.Paths[Derived Column Output1]"
                  endId="Package\For Loop Container\Load DAM Price\Multicast.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\For Loop Container\Load DAM Price\Add Date.Outputs[Derived Column Output]" />
                <path
                  refId="Package\For Loop Container\Load DAM Price.Paths[Flat File Source Output]"
                  endId="Package\For Loop Container\Load DAM Price\Add DateTime.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\For Loop Container\Load DAM Price\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\For Loop Container\Load DAM Price.Paths[Multicast Output 1]"
                  endId="Package\For Loop Container\Load DAM Price\Load Dam Price.Inputs[ADO NET Destination Input]"
                  name="Multicast Output 1"
                  startId="Package\For Loop Container\Load DAM Price\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\For Loop Container\Load DAM Price.Paths[Multicast Output 2]"
                  endId="Package\For Loop Container\Load DAM Price\Aggregate.Inputs[Aggregate Input 1]"
                  name="Multicast Output 2"
                  startId="Package\For Loop Container\Load DAM Price\Multicast.Outputs[Multicast Output 2]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Load Locations"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{C6BCCE86-07E9-45A2-BA8F-60861F0795FC}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Locations"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\For Loop Container\Load Locations\ADO NET Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="ADO NET Destination"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."OMLocation"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load Locations\ADO NET Destination.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      connectionManagerRefId="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[latitude]"
                          cachedDataType="r8"
                          cachedName="latitude"
                          externalMetadataColumnId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[latitude]"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[latitude]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[longitude]"
                          cachedDataType="r8"
                          cachedName="longitude"
                          externalMetadataColumnId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[longitude]"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[longitude]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[location_id]"
                          cachedDataType="i4"
                          cachedName="location_id"
                          externalMetadataColumnId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[location_id]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[latitude]"
                          dataType="numeric"
                          name="latitude"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[longitude]"
                          dataType="numeric"
                          name="longitude"
                          precision="5"
                          scale="2" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Locations\ADO NET Destination.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Locations\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Locations\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Locations\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Locations\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load Locations\Conditional Split.Inputs[Conditional Split Input].Columns[latitude]"
                          cachedDataType="r8"
                          cachedName="latitude"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[latitude]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Locations\Conditional Split.Inputs[Conditional Split Input].Columns[longitude]"
                          cachedDataType="r8"
                          cachedName="longitude"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[longitude]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Not 0 Row]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Not 0 Row"
                      synchronousInputId="Package\For Loop Container\Load Locations\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[latitude]} != 0 &amp;&amp; #{Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[longitude]} != 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">latitude != 0 &amp;&amp; longitude != 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\For Loop Container\Load Locations\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\For Loop Container\Load Locations\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Locations\Location Data"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Location Data"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load Locations\Location Data.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Open-Meteo-Location]"
                      connectionManagerRefId="Package.ConnectionManagers[Open-Meteo-Location]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[location_id]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[location_id]"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[location_id]"
                          name="location_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[latitude]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[latitude]"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[latitude]"
                          name="latitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[longitude]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[longitude]"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].Columns[longitude]"
                          name="longitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[location_id]"
                          dataType="i4"
                          name="location_id" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[latitude]"
                          dataType="r8"
                          name="latitude" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[longitude]"
                          dataType="r8"
                          name="longitude" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[elevation]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="elevation" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[utc_offset_seconds]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="utc_offset_seconds" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[timezone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="timezone" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output].ExternalColumns[timezone_abbreviation]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="timezone_abbreviation" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\For Loop Container\Load Locations.Paths[Flat File Source Output]"
                  endId="Package\For Loop Container\Load Locations\Conditional Split.Inputs[Conditional Split Input]"
                  name="Flat File Source Output"
                  startId="Package\For Loop Container\Load Locations\Location Data.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\For Loop Container\Load Locations.Paths[Not 0 Row]"
                  endId="Package\For Loop Container\Load Locations\ADO NET Destination.Inputs[ADO NET Destination Input]"
                  name="Not 0 Row"
                  startId="Package\For Loop Container\Load Locations\Conditional Split.Outputs[Not 0 Row]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Load Weather"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{889C591E-02B7-4161-8244-812CF3F318F3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Weather"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\For Loop Container\Load Weather\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Weather\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Aggregate.Inputs[Aggregate Input 1].Columns[dateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="dateTime"
                          cachedSortKeyPosition="2"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[dateTime]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Aggregate.Inputs[Aggregate Input 1].Columns[temperature_2m (Â°C)]"
                          cachedDataType="r8"
                          cachedName="temperature_2m (Â°C)"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[temperature_2m (Â°C)]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Aggregate.Inputs[Aggregate Input 1].Columns[relative_humidity_2m (%)]"
                          cachedDataType="i4"
                          cachedName="relative_humidity_2m (%)"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[relative_humidity_2m (%)]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[dateTime]"
                          dataType="dbTimeStamp"
                          lineageId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[dateTime]"
                          name="dateTime">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[dateTime]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[AvgTemp]"
                          dataType="r8"
                          lineageId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[AvgTemp]"
                          name="AvgTemp">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[temperature_2m (Â°C)]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">5</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[AvgHum]"
                          dataType="r8"
                          lineageId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[AvgHum]"
                          name="AvgHum">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[relative_humidity_2m (%)]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">5</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Weather\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Weather\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Derived Column.Inputs[Derived Column Input].Columns[time]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="time"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\For Loop Container\Load Weather\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Output].Columns[dateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Output].Columns[dateTime]"
                          name="dateTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)([REPLACE](#{Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[time]},"T"," "))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)(REPLACE(time,"T"," "))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\For Loop Container\Load Weather\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Weather\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Weather\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Weather\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\For Loop Container\Load Weather\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load Weather\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\For Loop Container\Load Weather\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\For Loop Container\Load Weather\Multicast.Outputs[Multicast Output 3]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\For Loop Container\Load Weather\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Weather\Save Avg Weather Data"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="Save Avg Weather Data"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."OMAvgWeather"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      connectionManagerRefId="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].Columns[dateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="dateTime"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          lineageId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[dateTime]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].Columns[AvgTemp]"
                          cachedDataType="r8"
                          cachedName="AvgTemp"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[temperature]"
                          lineageId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[AvgTemp]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].Columns[AvgHum]"
                          cachedDataType="r8"
                          cachedName="AvgHum"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[humidity]"
                          lineageId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1].Columns[AvgHum]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          dataType="dbTimeStamp"
                          name="datetime" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[temperature]"
                          dataType="numeric"
                          name="temperature"
                          precision="7"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[humidity]"
                          dataType="i4"
                          name="humidity" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Weather\Save Weather Data"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="Save Weather Data"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."OMWeather"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load Weather\Save Weather Data.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      connectionManagerRefId="Package.ConnectionManagers[(localdb)\mssqllocaldb.WeatherDamSM5P0J]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].Columns[location_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="location_id"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[location_id]"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[location_id]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].Columns[dateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="dateTime"
                          cachedSortKeyPosition="2"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[dateTime]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].Columns[temperature_2m (Â°C)]"
                          cachedDataType="r8"
                          cachedName="temperature_2m (Â°C)"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[temperature]"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[temperature_2m (Â°C)]" />
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].Columns[relative_humidity_2m (%)]"
                          cachedDataType="i4"
                          cachedName="relative_humidity_2m (%)"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[humidity]"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[relative_humidity_2m (%)]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[location_id]"
                          dataType="i4"
                          name="location_id" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[datetime]"
                          dataType="dbTimeStamp"
                          name="datetime" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[temperature]"
                          dataType="numeric"
                          name="temperature"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input].ExternalColumns[humidity]"
                          dataType="i4"
                          name="humidity" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Weather\Save Weather Data.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Save Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Save Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Save Weather Data.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Weather\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\For Loop Container\Load Weather\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Inputs[Sort Input].Columns[location_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="location_id"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[location_id]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Inputs[Sort Input].Columns[time]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="time"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[time]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Inputs[Sort Input].Columns[temperature_2m (Â°C)]"
                          cachedDataType="r8"
                          cachedName="temperature_2m (Â°C)"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[temperature_2m (Â°C)]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Inputs[Sort Input].Columns[relative_humidity_2m (%)]"
                          cachedDataType="i4"
                          cachedName="relative_humidity_2m (%)"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[relative_humidity_2m (%)]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Inputs[Sort Input].Columns[dateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="dateTime"
                          lineageId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Output].Columns[dateTime]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">2</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[location_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[location_id]"
                          name="location_id"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[location_id]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[time]"
                          name="time">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[time]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[temperature_2m (Â°C)]"
                          dataType="r8"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[temperature_2m (Â°C)]"
                          name="temperature_2m (Â°C)">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[temperature_2m (Â°C)]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[relative_humidity_2m (%)]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[relative_humidity_2m (%)]"
                          name="relative_humidity_2m (%)">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[relative_humidity_2m (%)]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[dateTime]"
                          dataType="dbTimeStamp"
                          lineageId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output].Columns[dateTime]"
                          name="dateTime"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Output].Columns[dateTime]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\For Loop Container\Load Weather\Weather Data"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Weather Data"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\For Loop Container\Load Weather\Weather Data.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Open-Meteo-Weather]"
                      connectionManagerRefId="Package.ConnectionManagers[Open-Meteo-Weather]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[location_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[location_id]"
                          length="50"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[location_id]"
                          name="location_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[time]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[time]"
                          length="50"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[time]"
                          name="time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[temperature_2m (Â°C)]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[temperature_2m (Â°C)]"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[temperature_2m (Â°C)]"
                          name="temperature_2m (Â°C)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[relative_humidity_2m (%)]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[relative_humidity_2m (%)]"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].Columns[relative_humidity_2m (%)]"
                          name="relative_humidity_2m (%)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[location_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="location_id" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="time" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[temperature_2m (Â°C)]"
                          dataType="r8"
                          name="temperature_2m (Â°C)" />
                        <externalMetadataColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output].ExternalColumns[relative_humidity_2m (%)]"
                          dataType="i4"
                          name="relative_humidity_2m (%)" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\For Loop Container\Load Weather.Paths[Aggregate Output 1]"
                  endId="Package\For Loop Container\Load Weather\Save Avg Weather Data.Inputs[ADO NET Destination Input]"
                  name="Aggregate Output 1"
                  startId="Package\For Loop Container\Load Weather\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\For Loop Container\Load Weather.Paths[Derived Column Output]"
                  endId="Package\For Loop Container\Load Weather\Sort.Inputs[Sort Input]"
                  name="Derived Column Output"
                  startId="Package\For Loop Container\Load Weather\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\For Loop Container\Load Weather.Paths[Flat File Source Output]"
                  endId="Package\For Loop Container\Load Weather\Derived Column.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\For Loop Container\Load Weather\Weather Data.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\For Loop Container\Load Weather.Paths[Multicast Output 1]"
                  endId="Package\For Loop Container\Load Weather\Save Weather Data.Inputs[ADO NET Destination Input]"
                  name="Multicast Output 1"
                  startId="Package\For Loop Container\Load Weather\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\For Loop Container\Load Weather.Paths[Multicast Output 2]"
                  endId="Package\For Loop Container\Load Weather\Aggregate.Inputs[Aggregate Input 1]"
                  name="Multicast Output 2"
                  startId="Package\For Loop Container\Load Weather\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\For Loop Container\Load Weather.Paths[Sort Output]"
                  endId="Package\For Loop Container\Load Weather\Multicast.Inputs[Multicast Input 1]"
                  name="Sort Output"
                  startId="Package\For Loop Container\Load Weather\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Parse Json to CSV"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{6E721AED-86A5-4B51-8E81-0618668BC3CE}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parse Json to CSV"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::startDate">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties.Settings.get_Default():ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties.Sett" +
    "ings")]

namespace ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using Newtonsoft.Json.Linq;
#endregion

namespace ST_917cd3bc5d1e4c28b970fbc7cfe6d02c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string jsonResponse = File.ReadAllText(@"C:\SSIS\entsoe_price_result.json");

            var root = JObject.Parse(jsonResponse);

            string csvFilePath = @"C:\SSIS\entsoe_price_result.csv";

            string startDate = Dts.Variables["User::startDate"].Value.ToString();

            DateTime date = DateTime.ParseExact(startDate, "yyyy-MM-dd", null);

            int day = 0;

            using (StreamWriter sw = new StreamWriter(csvFilePath))
            {
                // Write CSV Header
                sw.WriteLine("TimeIndex,Price");

                // Extract instances from the JSON response
                var instances = root["instanceList"];
                foreach (var instance in instances)
                {
                    var periods = instance["curveData"]?["periodList"];
                    if (periods != null)
                    {
                        foreach (var period in periods)
                        {
                            DateTime dateTemp = date.AddDays(day);
                            var pointMap = period["pointMap"];
                            if (pointMap != null)
                            {
                                // Iterate over pointMap
                                foreach (var hour in pointMap.Children<JProperty>())
                                {
                                    int hourIndex = int.Parse(hour.Name); // Hour index (0 to 23)
                                    string price = hour.Value.First.ToString(); // Price value (e.g., "46.99")

                                    // Write to CSV
                                    sw.WriteLine($"{dateTemp.AddHours(hourIndex).ToString("yyyy-MM-ddTHH:mm:ss")},{price}");
                                }
                            }
                            day = day + 1;
                        }
                    }
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;

		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3CC96B3C-C645-423D-9350-046E1D58725D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_917cd3bc5d1e4c28b970fbc7cfe6d02c</RootNamespace>
    <AssemblyName>ST_917cd3bc5d1e4c28b970fbc7cfe6d02c</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\Bence\AppData\Local\Temp\Vsta\SSIS_ST160\VstaDmm__RT86AkaFkB2dD8ZUCQ\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_917cd3bc5d1e4c28b970fbc7cfe6d02c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_917cd3bc5d1e4c28b970fbc7cfe6d02c</msb:DisplayName>
    <msb:ProjectId>{D17AFE39-CEB8-41C7-AEB4-189ED3F13A24}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_917cd3bc5d1e4c28b970fbc7cfe6d02c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_917cd3bc5d1e4c28b970fbc7cfe6d02c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_917cd3bc5d1e4c28b970fbc7cfe6d02c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFC/I2gAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAujMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGgzAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
MwAAAAAAAEgAAAACAAUAuCIAAPgPAAABAAAAAAAAALAyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBACOAQAAAQAAEXIBAABwKBAAAAooEQAACgpyQwAAcAIo
EgAACm8TAAAKcoMAAHBvFAAACm8VAAAKbxYAAApyowAAcBQoFwAACgsWDHMYAAAKDQlyuQAAcG8Z
AAAKBnLZAABwbxoAAApvGwAAChMEOPMAAAARBG8cAAAKcvMAAHBvHQAACiUtBCYUKwpyBwEAcG8d
AAAKEwURBTnIAAAAEQVvGwAAChMGOKAAAAARBm8cAAAKEgEIbCgeAAAKEwdyHQEAcG8dAAAKEwgR
CCx6EQhvAQAAKxMKEgooIAAAChMJK08RCW8hAAAKJW8iAAAKKCMAAAoTC28kAAAKbyUAAApvFgAA
ChMMCRIHEQtsKCYAAAoTDRINci8BAHAoJwAACnJXAQBwEQwoKAAACm8ZAAAKEQlvKQAACi2o3gwR
CSwHEQlvKgAACtwIF1gMEQZvKQAACjpU////3gwRBiwHEQZvKgAACtwRBG8pAAAKOgH////eFhEE
LAcRBG8qAAAK3AksBglvKgAACtwCKBIAAAoWbysAAAoqAABBZAAAAgAAANcAAABcAAAAMwEAAAwA
AAAAAAAAAgAAAJ4AAACzAAAAUQEAAAwAAAAAAAAAAgAAAGUAAAAGAQAAawEAAAwAAAAAAAAAAgAA
AEgAAAAvAQAAdwEAAAoAAAAAAAAAHgIoLAAACioeAigtAAAKKq5+AQAABC0eclsBAHDQAwAAAigu
AAAKby8AAApzMAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKDEAAAoqLnMI
AAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADEBAAAI34AADAF
AADQBgAAI1N0cmluZ3MAAAAAAAwAANABAAAjVVMA0A0AABAAAAAjR1VJRAAAAOANAAAYAgAAI0Js
b2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAALAAAAAUAAAAGAAAACQAAAAEAAAAxAAAA
AgAAABAAAAABAAAAAgAAAAMAAAAEAAAABAAAAAEAAAAFAAAAAQAAAAEAAAABAAAAAAAFBAEAAAAA
AAYAtQJMBQYARANMBQYAAQI5BQ8AwAUAAAYALgKTBAYAmAKTBAYAeQKTBAYAKwOTBAYA1QKTBAYA
7gKTBAYARQKTBAYAYAJyAwoACQO0AwoAcgG0Aw4AaQbBBAYACgE2BAYA+gQ6AAYAHQCYAA4ATgTB
BA4AxAbBBA4ADwDBBAYAPQQ2BAYA5AE5BQYAagY2BAYA6gRsBQYAtQR+BBIAtAHvAxIAFQLvAxIA
jgFpBAYAyQFMBQYA/AA6AAoA3QO0AxYAAgYTARYAwwATAQYA1gQ2BAYABwU6AAYAAQCYAAYAKwA2
BAYAjgM2BAYAEgUVBgYAzAA2BAYAPQE2BAYA2AA2BAYAuwaTBAAAAAAxAAAAAAABAAEAAQAQAF4E
dAA5AAEAAQAAABAAcwXPBWEAAQADAAABEAAMBs8FdQADAAcAAwEAAEEGAABZAAQACgARAEIEGQER
AGIBHQERALMAIQEGBmMAJQFWgDEGKAFWgEIBKAFQIAAAAACGAGQEBgABAFAiAAAAAIYYLAUGAAEA
WCIAAAAAgxgsBQYAAQBgIgAAAACTCOYELAEBAIwiAAAAAJMISgExAQEAkyIAAAAAkwhWATYBAQCb
IgAAAACWCHEGPAECAKIiAAAAAIYYLAUGAAIAqiIAAAAAkRgyBUEBAgAAAAEAbAMJACwFAQARACwF
BgAZACwFCgApACwFEAAxACwFEAA5ACwFEABBACwFEABJACwFEABRACwFEABZACwFEABhACwFEABp
ACwFBgC5ACwFBgDhACwFFQDxACwFBgD5AKsGRwB5AK4BTABxADkGUgABAf4FWAAJAS0EXgARAWID
ZQDBAIwDaQCBAF4GbQCJACwFEAAhATMBEAB5AC0EdwAMAB4FhQAUAIwGlQCZAC0EmgCBAE8GoACZ
AFUEpgAcAB4FhQAkAIwGlQChAAEBaQAxAa4BwwChAGIDyACZAJgGyACBACgGoACBAIwDzQA5AVcG
0gBBAaIG2QBJAaYBBgABAX0GAQBxACwFBgDBACwFBgBRAeoA3QBRAbcG5gDJACwF7ADpACwFBgAI
ABQADwEIABgAFAEpAHMAfAEuAAsAVAEuABMAXQEuABsAfAEuACMAhQEuACsArgEuADMArgEuADsA
rgEuAEMAhQEuAEsAtAEuAFMArgEuAFsAywFDAGMAFAFJAHMAfAFhAHsAFAFjAGsAFAEbAAMAAQAE
AAMAAADqBEUBAABqAUoBAAB1Bk8BAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAfQCOALUAvAAEgAAA
AQAAADAk+KcAAAAAAAB0AAAABAAAAAAAAAAAAAAA9ABrAAAAAAAQAAAAAAAAAAAAAAD9AJUDAAAA
AA0AAAAAAAAAAAAAAAYBpQQAAAAABAAAAAAAAAAAAAAA9AA2BAAAAAAQAAAAAAAAAAAAAAD9AEQA
AAAAAAAAAAABAAAAfQUAAAUAAgA/ALAAAAAAAABJRW51bWVyYWJsZWAxAEpFbnVtZXJhYmxlYDEA
SUVudW1lcmF0b3JgMQBJbnQzMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfOTE3Y2QzYmM1ZDFlNGMyOGI5NzBmYmM3
Y2ZlNmQwMmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNlAFZhcmlh
YmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUA
Z2V0X05hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxp
bmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9z
ZQBQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2Jq
ZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzkxN2NkM2JjNWQxZTRjMjhiOTcwZmJj
N2NmZTZkMDJjLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBKVG9rZW4AQ2hp
bGRyZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBOZXd0b25zb2Z0Lkpzb24AQ3VsdHVyZUluZm8ATmV3dG9uc29m
dC5Kc29uLkxpbnEASUZvcm1hdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU3RyZWFtV3Jp
dGVyAFRleHRXcml0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTVF85MTdjZDNiYzVkMWU0YzI4Yjk3MGZiYzdjZmU2ZDAyYy5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOTE3Y2QzYmM1ZDFlNGMyOGI5NzBm
YmM3Y2ZlNmQwMmMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5Db2xs
ZWN0aW9ucwBBZGRIb3VycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBBZGREYXlzAENv
bmNhdABQYXJzZUV4YWN0AEpPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0N1
cnJlbnQAZ2V0X0ZpcnN0AE1vdmVOZXh0AFJlYWRBbGxUZXh0AGdldF9Bc3NlbWJseQBKUHJvcGVy
dHkAAAAAQUMAOgBcAFMAUwBJAFMAXABlAG4AdABzAG8AZQBfAHAAcgBpAGMAZQBfAHIAZQBzAHUA
bAB0AC4AagBzAG8AbgAAP0MAOgBcAFMAUwBJAFMAXABlAG4AdABzAG8AZQBfAHAAcgBpAGMAZQBf
AHIAZQBzAHUAbAB0AC4AYwBzAHYAAB9VAHMAZQByADoAOgBzAHQAYQByAHQARABhAHQAZQAAFXkA
eQB5AHkALQBNAE0ALQBkAGQAAR9UAGkAbQBlAEkAbgBkAGUAeAAsAFAAcgBpAGMAZQAAGWkAbgBz
AHQAYQBuAGMAZQBMAGkAcwB0AAATYwB1AHIAdgBlAEQAYQB0AGEAABVwAGUAcgBpAG8AZABMAGkA
cwB0AAARcABvAGkAbgB0AE0AYQBwAAAneQB5AHkAeQAtAE0ATQAtAGQAZABUAEgASAA6AG0AbQA6
AHMAcwABAywAAHFTAFQAXwA5ADEANwBjAGQAMwBiAGMANQBkADEAZQA0AGMAMgA4AGIAOQA3ADAA
ZgBiAGMANwBjAGYAZQA2AGQAMAAyAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAALQFdom4IylOhigtqd5utKUABCABAQgDIAABBSABARERBCABAQ4FIAEBEW0r
Bw4SPRFBCBJFFRJJARJNEk0VEkkBEk0RQRJNFRJJARJRFRFVARJRCA4RQQQAAQ4OBQABEj0OBSAA
EoCBBSAAEoCFBiABEoCJHAMgABwDIAAOCQADEUEODhKAjQUgARJNDgcVEoCVARJNCCAAFRJJARMA
BhUSSQESTQQgABMABSABEk0cBSABEUENCTABABURVQEeAAQKARJRBhURVQESUQYVEkkBElEEAAEI
DgQgABJNBCABDg4GAAMODg4OAyAAAggAARKAqRGArQUgABKAsQcgAgEOEoCxCLd6XFYZNOCJCImE
Xc2AgMyRCDCtT+aypq7tBAAAAAAEAQAAAAMGEmUDBhJpAwYSEAIGCAMGERQEAAASZQQAABJpBQAB
ARJpBAAAEhADAAABBAgAEmUECAASaQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF85MTdjZDNiYzVkMWU0YzI4Yjk3MGZiYzdjZmU2ZDAy
YwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAACQMwAAAAAAAAAAAACqMwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnDMAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA+KcwJAAAAQD4pzAkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA5ADEANwBjAGQAMwBiAGMANQBkADEAZQA0AGMAMgA4AGIAOQA3ADAAZgBiAGMANwBj
AGYAZQA2AGQAMAAyAGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OQAyADYANAAuADQAMwAwADAAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA5ADEANwBjAGQAMwBiAGMANQBkADEAZQA0AGMAMgA4AGIAOQA3ADAAZgBiAGMANwBjAGYA
ZQA2AGQAMAAyAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADkAMQA3AGMAZAAzAGIAYwA1AGQAMQBlADQAYwAyADgAYgA5ADcAMABmAGIA
YwA3AGMAZgBlADYAZAAwADIAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA5ADEANwBjAGQAMwBiAGMANQBkADEAZQA0AGMAMgA4AGIAOQA3ADAAZgBiAGMA
NwBjAGYAZQA2AGQAMAAyAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADkAMgA2ADQALgA0ADMAMAAwADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMgA2ADQALgA0ADMAMAAwADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAvDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Split Data Into 2"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{9208ADF6-104F-4B81-AB37-B11B12E93204}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Split Data Into 2"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_65554b716ba34d21a7425570170c358a"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_65554b716ba34d21a7425570170c358a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string inputPath = @"C:\SSIS\open-meteo.csv";
            string locationPath = @"C:\SSIS\om-locations.csv";
            string weatherPath = @"C:\SSIS\om-weather.csv";

            bool foundSecondHeader = false;
            using (var reader = new StreamReader(inputPath))
            using (var writer1 = new StreamWriter(locationPath))
            using (var writer2 = new StreamWriter(weatherPath))
            {
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    if (line.StartsWith("location_id,time")) // 2nd header
                    {
                        foundSecondHeader = true;
                        writer2.WriteLine(line);
                        continue;
                    }

                    if (!foundSecondHeader)
                    {
                        writer1.WriteLine(line);
                    }
                    else
                    {
                        writer2.WriteLine(line);
                    }
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_65554b716ba34d21a7425570170c358a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_65554b716ba34d21a7425570170c358a</msb:DisplayName>
    <msb:ProjectId>{3277BC7D-7B0E-4C3B-8377-0DA8A55DC837}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_65554b716ba34d21a7425570170c358a.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_65554b716ba34d21a7425570170c358a.Properties.Settings.get_Default():ST_65554b716ba34d21a7425570170c358a.Properties.Sett" +
    "ings")]

namespace ST_65554b716ba34d21a7425570170c358a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_65554b716ba34d21a7425570170c358a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7b19eeee-ac45-4145-a323-2fb4174dceff}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_65554b716ba34d21a7425570170c358a</RootNamespace>
    <AssemblyName>ST_65554b716ba34d21a7425570170c358a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_65554b716ba34d21a7425570170c358a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_65554b716ba34d21a7425570170c358a")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_65554b716ba34d21a7425570170c358a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_65554b716ba34d21a7425570170c358a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_65554b716ba34d21a7425570170c358a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_65554b716ba34d21a7425570170c358a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_65554b716ba34d21a7425570170c358a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_65554b716ba34d21a7425570170c358a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFZdImgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAvi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGwuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
LgAAAAAAAEgAAAACAAUAiCEAACwMAAABAAAAAAAAALQtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgCZAAAAAQAAEXIBAABwci8AAHAKcmEAAHALFgxzEAAA
Cg0GcxEAAAoTBAdzEQAAChMFKzIRBnKPAABwbxIAAAosDRcMEQURBm8TAAAKKxcILQsRBBEGbxMA
AAorCREFEQZvEwAACglvFAAACiUTBi3D3iIRBSwHEQVvFQAACtwRBCwHEQRvFQAACtwJLAYJbxUA
AArcAigWAAAKFm8XAAAKKgAAAAEoAAACACkAQWoADAAAAAACACEAVXYADAAAAAACABkAaYIACgAA
AAAeAigYAAAKKh4CKBkAAAoqrn4BAAAELR5ysQAAcNADAAACKBoAAApvGwAACnMcAAAKgAEAAAR+
AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoHQAACioucwgAAAaAAwAABCoAAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMwDAAAjfgAAOAQAAFwFAAAjU3RyaW5ncwAAAACU
CQAAJAEAACNVUwC4CgAAEAAAACNHVUlEAAAAyAoAAGQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkD
AAAA+gEzABYAAAEAAAAhAAAABQAAAAYAAAAJAAAAAQAAAB0AAAACAAAAEAAAAAEAAAACAAAAAwAA
AAQAAAABAAAAAwAAAAEAAAABAAAAAABdAwEAAAAAAAYADgJUBAYAnQJUBAYAWgFBBA8AyAQAAAYA
hwHSAwYA8QHSAwYA0gHSAwYAhALSAwYALgLSAwYARwLSAwYAngHSAwYAuQHBAgoAYgIMAwoA0QAM
AwYA8AMKAAYAHAQKAAYAjAOFAwYAPQFBBAYALQWFAwYADAR0BAYA5AO9Aw4ADQFHAw4AbgFHAw4A
7QCoAwYAIgFUBAYA2wKFAwYAKQQKAAYA/QMKAAYAWQCFAwoANQMMAwYAnACFAwYAZQCFAwYAUwXS
AwAAAAABAAAAAAABAAEAAQAQAJ0DHAA5AAEAAQAAABAAewTXBE0AAQADAAABEAAGBdcEYQADAAcA
AwEAAB8FAABFAAQACgARAJEDaAARAMEAbAARAEkAcAAGBhQAdABWgA8FdwBWgKEAdwBQIAAAAACG
AKMDBgABACAhAAAAAIYYNAQGAAEAKCEAAAAAgxg0BAYAAQAwIQAAAACTCAgEewABAFwhAAAAAJMI
qQCAAAEAYyEAAAAAkwi1AIUAAQBrIQAAAACWCDQFiwACAHIhAAAAAIYYNAQGAAIAeiEAAAAAkRg6
BJAAAgAAAAEAuwIJADQEAQARADQEBgAZADQECgApADQEEAAxADQEEAA5ADQEEABBADQEEABJADQE
EABRADQEEABZADQEEABhADQEEABpADQEBgCRADQEBgC5ADQEFQDJADQEBgB5ADQEEACBADQEEADR
AOICKADZAJIAEADhAIkALQDpAAUBBgBxABcFMQDxAEAFAQBxADQEBgCZADQEBgD5AHcANgD5AE8F
PgChADQERADBADQEBgAIABQAXgAIABgAYwApAHMAywAuAAsAowAuABMArAAuABsAywAuACMA1AAu
ACsA/QAuADMA/QAuADsA/QAuAEMA1AAuAEsAAwEuAFMA/QAuAFsAGgFDAGMAYwBJAHMAywBhAHsA
YwBjAGsAYwAbAAMAAQAEAAMAAAAMBJQAAADJAJkAAAA4BZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAH
AAcABIAAAAEAAAAvJLufAAAAAAAAHAAAAAQAAAAAAAAAAAAAAEwAQAAAAAAAEAAAAAAAAAAAAAAA
VQDtAgAAAAAEAAAAAAAAAAAAAABMAIUDAAAAAAAAAAABAAAAhQQAAAUAAgAAAAA8TW9kdWxlPgBT
eXN0ZW0uSU8AdmFsdWVfXwBTVF82NTU1NGI3MTZiYTM0ZDIxYTc0MjU1NzAxNzBjMzU4YQBtc2Nv
cmxpYgBkZWZhdWx0SW5zdGFuY2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAUmVhZExpbmUAV3JpdGVMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN0YXJ0c1dpdGgATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzY1
NTU0YjcxNmJhMzRkMjFhNzQyNTU3MDE3MGMzNThhLmRsbABTeXN0ZW0ARW51bQByZXNvdXJjZU1h
bgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfNjU1NTRiNzE2YmEzNGQyMWE3NDI1NTcwMTcwYzM1OGEuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzY1NTU0YjcxNmJhMzRkMjFhNzQyNTU3
MDE3MGMzNThhLlByb3BlcnRpZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQAALUMAOgBc
AFMAUwBJAFMAXABvAHAAZQBuAC0AbQBlAHQAZQBvAC4AYwBzAHYAATFDADoAXABTAFMASQBTAFwA
bwBtAC0AbABvAGMAYQB0AGkAbwBuAHMALgBjAHMAdgABLUMAOgBcAFMAUwBJAFMAXABvAG0ALQB3
AGUAYQB0AGgAZQByAC4AYwBzAHYAASFsAG8AYwBhAHQAaQBvAG4AXwBpAGQALAB0AGkAbQBlAABx
UwBUAF8ANgA1ADUANQA0AGIANwAxADYAYgBhADMANABkADIAMQBhADcANAAyADUANQA3ADAAMQA3
ADAAYwAzADUAOABhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
DJCA7xhXakiiStL23CkT1wAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQwHBw4OAhI9EkESQQ4E
IAECDgMgAA4EIAASeQcAARJ9EYCBBSAAEoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEEAAAA
AAQBAAAAAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQI
ABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUXzY1NTU0YjcxNmJhMzRkMjFhNzQyNTU3MDE3MGMzNThhAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJQuAAAAAAAAAAAAAK4u
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgLgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQC7ny8kAAABALufLyQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADYANQA1ADUANABiADcAMQA2AGIAYQAzADQAZAAyADEAYQA3ADQAMgA1ADUANwAw
ADEANwAwAGMAMwA1ADgAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADIANgAzAC4ANAAwADgAOQAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADYANQA1ADUANABiADcAMQA2AGIAYQAzADQAZAAyADEAYQA3ADQAMgA1ADUANwAwADEA
NwAwAGMAMwA1ADgAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANgA1ADUANQA0AGIANwAxADYAYgBhADMANABkADIAMQBhADcANAAyADUA
NQA3ADAAMQA3ADAAYwAzADUAOABhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADYANQA1ADUANABiADcAMQA2AGIAYQAzADQAZAAyADEAYQA3ADQAMgA1ADUA
NwAwADEANwAwAGMAMwA1ADgAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAyADYAMwAuADQAMAA4ADkAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADYAMwAuADQAMAA4ADkAMQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{05769ADF-E093-484F-8BEB-9F8B97B8E4B8}"
          DTS:From="Package\For Loop Container\Download Open Meteo Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\For Loop Container\Check Location Empty" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{DF60E50D-7F46-4900-9C56-C7F1DFF6164C}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::loc_row_count] == 0"
          DTS:From="Package\For Loop Container\Split Data Into 2"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\For Loop Container\Load Locations" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{5F394D31-DD6B-4D47-9BFC-480F37805AD2}"
          DTS:From="Package\For Loop Container\Check Location Empty"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\For Loop Container\Split Data Into 2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{8A1AAF58-5EDA-43C9-ABB4-BCFCD989303E}"
          DTS:From="Package\For Loop Container\Split Data Into 2"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\For Loop Container\Load Weather" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{2B89D73D-7915-4981-AC29-5BA2353D1B38}"
          DTS:From="Package\For Loop Container\Download Entsoe Dam Price"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\For Loop Container\Parse Json to CSV" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{2E3DEC6D-31A4-4917-A092-7AF1788BF57E}"
          DTS:From="Package\For Loop Container\Parse Json to CSV"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\For Loop Container\Load DAM Price" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{08EAE5BF-4F07-4F25-882D-C23DE08F10E0}"
          DTS:From="Package\For Loop Container\Increment Time Interval"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\For Loop Container\Download Open Meteo Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{2B90C6FD-2FA0-41D1-9AF2-3B0ED8F4CA5B}"
          DTS:From="Package\For Loop Container\Increment Time Interval"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\For Loop Container\Download Entsoe Dam Price" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="182.4,41.6"
          Id="Package\For Loop Container\Check Location Empty"
          TopLeft="91.2380908540789,210.285712955537" />
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="192.44285265477,164.099999186397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.004761800691,46.1857137691404"
              Start="0,0"
              End="-10.004761800691,38.6857137691404">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0928568845702" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.0928568845702"
                    Point2="0,23.0928568845702"
                    Point3="-4,23.0928568845702" />
                  <mssgle:LineSegment
                    End="-6.00476180069103,23.0928568845702" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.00476180069103,23.0928568845702"
                    Point2="-10.004761800691,23.0928568845702"
                    Point3="-10.004761800691,27.0928568845702" />
                  <mssgle:LineSegment
                    End="-10.004761800691,38.6857137691404" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="184.349994946023,251.885712955537">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.4428564506485"
              Start="0,0"
              End="0,36.9428564506485">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.9428564506485" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="209.6,41.6"
          Id="Package\For Loop Container\Download Open Meteo Data"
          TopLeft="87.64285265477,122.499999186397" />
        <NodeLayout
          Size="148.8,41.6"
          Id="Package\For Loop Container\Load Locations"
          TopLeft="6.33333328780196,437.099996998707" />
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="186.261899037966,337.928569406186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-105.528565750165,99.1714275925216"
              Start="0,0"
              End="-105.528565750165,91.6714275925216">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5857137962607" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.5857137962607"
                    Point2="0,49.5857137962607"
                    Point3="-4,49.5857137962607" />
                  <mssgle:LineSegment
                    End="-101.528565750165,49.5857137962607" />
                  <mssgle:CubicBezierSegment
                    Point1="-101.528565750165,49.5857137962607"
                    Point2="-105.528565750165,49.5857137962607"
                    Point3="-105.528565750165,53.5857137962607" />
                  <mssgle:LineSegment
                    End="-105.528565750165,91.6714275925216" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.7642828750825,54.5857137962607,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\For Loop Container\Load Weather"
          TopLeft="187.523799578467,436.728568429862" />
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="210.261899037966,337.928569406186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.8619005405008,98.799999023676"
              Start="0,0"
              End="48.8619005405008,91.299999023676">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.1374996033684" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.1374996033684"
                    Point2="0,40.1374996033684"
                    Point3="4,40.1374996033684" />
                  <mssgle:LineSegment
                    End="44.8619005405008,40.1374996033684" />
                  <mssgle:CubicBezierSegment
                    Point1="44.8619005405008,40.1374996033684"
                    Point2="48.8619005405008,40.1374996033684"
                    Point3="48.8619005405008,44.1374996033684" />
                  <mssgle:LineSegment
                    End="48.8619005405008,91.299999023676" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="152,41.6"
          Id="Package\For Loop Container\Split Data Into 2"
          TopLeft="110.261899037966,296.328569406186" />
        <NodeLayout
          Size="211.2,41.6"
          Id="Package\For Loop Container\Download Entsoe Dam Price"
          TopLeft="313.413736036489,142.408462954808" />
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="418.923259228087,184.008462954808">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77.2571420306252"
              Start="0,0"
              End="0,69.7571420306252">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.7571420306252" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\For Loop Container\Load DAM Price"
          TopLeft="340.503687231483,408.874069567448" />
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="418.068234825584,302.865604985433">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,106.008464582015"
              Start="0,0"
              End="0,98.5084645820149">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,98.5084645820149" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="165.6,41.6"
          Id="Package\For Loop Container\Parse Json to CSV"
          TopLeft="336.032782419686,261.265604985433" />
        <NodeLayout
          Size="187.2,41.6"
          Id="Package\For Loop Container\Increment Time Interval"
          TopLeft="240.566649501358,7.99999956607817" />
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="304.299982834691,49.5999995660782">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-111.857130179921,72.8999996203185"
              Start="0,0"
              End="-111.857130179921,65.3999996203185">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5306778122985" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5306778122985"
                    Point2="0,29.5306778122985"
                    Point3="-4,29.5306778122985" />
                  <mssgle:LineSegment
                    End="-107.857130179921,29.5306778122985" />
                  <mssgle:CubicBezierSegment
                    Point1="-107.857130179921,29.5306778122985"
                    Point2="-111.857130179921,29.5306778122985"
                    Point3="-111.857130179921,33.5306778122985" />
                  <mssgle:LineSegment
                    End="-111.857130179921,65.3999996203185" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="364.033316168024,49.5999995660782">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54.9804198684652,92.8084633887299"
              Start="0,0"
              End="54.9804198684652,85.3084633887299">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5952927964516" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.5952927964516"
                    Point2="0,37.5952927964516"
                    Point3="4,37.5952927964516" />
                  <mssgle:LineSegment
                    End="50.9804198684652,37.5952927964516" />
                  <mssgle:CubicBezierSegment
                    Point1="50.9804198684652,37.5952927964516"
                    Point2="54.9804198684652,37.5952927964516"
                    Point3="54.9804198684652,41.5952927964516" />
                  <mssgle:LineSegment
                    End="54.9804198684652,85.3084633887299" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="544,533.6"
          Size="544,576.8"
          Id="Package\For Loop Container"
          TopLeft="73.3333293265769,96.1999993310372" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\For Loop Container\Load DAM Price">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="173.6,41.6"
          Id="Package\For Loop Container\Load DAM Price\Load Avg Dam Price"
          TopLeft="436.999993488193,599.399992355704" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\For Loop Container\Load DAM Price\Flat File Source"
          TopLeft="335.99999499321,62.9999990612268" />
        <NodeLayout
          Size="144.8,41.6"
          Id="Package\For Loop Container\Load DAM Price\Add DateTime"
          TopLeft="327.499995201826,177.499997437" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\For Loop Container\Load DAM Price\Multicast"
          TopLeft="342.999994888902,346.999994829297" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\For Loop Container\Load DAM Price\Aggregate"
          TopLeft="474.499993905425,489.499993681908" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\For Loop Container\Load DAM Price\Load Dam Price"
          TopLeft="153.999997705221,488.999992713332" />
        <NodeLayout
          Size="121.6,41.6"
          Id="Package\For Loop Container\Load DAM Price\Add Date"
          TopLeft="314.499995395541,262.699996513128" />
        <EdgeLayout
          Id="Package\For Loop Container\Load DAM Price.Paths[Multicast Output 2]"
          TopLeft="421.133328222235,388.599994829297">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="116.56666568319,100.899998852611"
              Start="0,0"
              End="116.56666568319,93.3999988526106">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.1618538365617" />
                  <mssgle:CubicBezierSegment
                    Point1="0,37.1618538365617"
                    Point2="0,41.1618538365617"
                    Point3="4,41.1618538365617" />
                  <mssgle:LineSegment
                    End="112.56666568319,41.1618538365617" />
                  <mssgle:CubicBezierSegment
                    Point1="112.56666568319,41.1618538365617"
                    Point2="116.56666568319,41.1618538365617"
                    Point3="116.56666568319,45.1618538365617" />
                  <mssgle:LineSegment
                    End="116.56666568319,93.3999988526106" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load DAM Price.Paths[Multicast Output 1]"
          TopLeft="384.066661555568,388.599994829297">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-153.666663850347,100.399997884035"
              Start="0,0"
              End="-153.666663850347,92.8999978840351">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.9578799315004" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.9578799315004"
                    Point2="0,40.9578799315004"
                    Point3="-4,40.9578799315004" />
                  <mssgle:LineSegment
                    End="-149.666663850347,40.9578799315004" />
                  <mssgle:CubicBezierSegment
                    Point1="-149.666663850347,40.9578799315004"
                    Point2="-153.666663850347,40.9578799315004"
                    Point3="-153.666663850347,44.9578799315004" />
                  <mssgle:LineSegment
                    End="-153.666663850347,92.8999978840351" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load DAM Price.Paths[Flat File Source Output]"
          TopLeft="411.59999499321,104.599999061227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.6999997913838,72.8999983757735"
              Start="0,0"
              End="-11.6999997913838,65.3999983757735">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.4499991878867" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.4499991878867"
                    Point2="0,36.4499991878867"
                    Point3="-4,36.4499991878867" />
                  <mssgle:LineSegment
                    End="-7.69999979138379,36.4499991878867" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.69999979138379,36.4499991878867"
                    Point2="-11.6999997913838,36.4499991878867"
                    Point3="-11.6999997913838,40.4499991878867" />
                  <mssgle:LineSegment
                    End="-11.6999997913838,65.3999983757735" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load DAM Price.Paths[Derived Column Output1]"
          TopLeft="375.299995395541,304.299996513128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27.2999994933604,42.6999983161687"
              Start="0,0"
              End="27.2999994933604,35.1999983161687">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.3499991580843" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.3499991580843"
                    Point2="0,21.3499991580843"
                    Point3="4,21.3499991580843" />
                  <mssgle:LineSegment
                    End="23.2999994933604,21.3499991580843" />
                  <mssgle:CubicBezierSegment
                    Point1="23.2999994933604,21.3499991580843"
                    Point2="27.2999994933604,21.3499991580843"
                    Point3="27.2999994933604,25.3499991580843" />
                  <mssgle:LineSegment
                    End="27.2999994933604,35.1999983161687" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load DAM Price.Paths[Derived Column Output]"
          TopLeft="399.899995201826,219.099997437">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5999998062849,43.5999990761279"
              Start="0,0"
              End="-24.5999998062849,36.0999990761279">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.799999538064" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.799999538064"
                    Point2="0,21.799999538064"
                    Point3="-4,21.799999538064" />
                  <mssgle:LineSegment
                    End="-20.5999998062849,21.799999538064" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5999998062849,21.799999538064"
                    Point2="-24.5999998062849,21.799999538064"
                    Point3="-24.5999998062849,25.799999538064" />
                  <mssgle:LineSegment
                    End="-24.5999998062849,36.0999990761279" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load DAM Price.Paths[Aggregate Output 1]"
          TopLeft="537.699993905425,531.099993681908">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.9000004172327,68.2999986737968"
              Start="0,0"
              End="-13.9000004172327,60.7999986737968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.1499993368984" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.1499993368984"
                    Point2="0,34.1499993368984"
                    Point3="-4,34.1499993368984" />
                  <mssgle:LineSegment
                    End="-9.90000041723272,34.1499993368984" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.90000041723272,34.1499993368984"
                    Point2="-13.9000004172327,34.1499993368984"
                    Point3="-13.9000004172327,38.1499993368984" />
                  <mssgle:LineSegment
                    End="-13.9000004172327,60.7999986737968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\For Loop Container\Load DAM Price\Load Avg Dam Price">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For Loop Container\Load DAM Price\Load Dam Price">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\For Loop Container\Load Locations">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\For Loop Container\Load Locations\Conditional Split"
          TopLeft="181.999997287989,150.999997749925" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\For Loop Container\Load Locations\Location Data"
          TopLeft="185.999997228384,60.9999990910292" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\For Loop Container\Load Locations\ADO NET Destination"
          TopLeft="163.99999755621,258.999996140599" />
        <EdgeLayout
          Id="Package\For Loop Container\Load Locations.Paths[Not 0 Row]"
          TopLeft="256.199997422099,192.599997749925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66.3999983906747"
              Start="0,0"
              End="0,58.8999983906747">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.8999983906747" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-23.66904296875,24.6658195078373,47.3380859375,9.568359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load Locations.Paths[Flat File Source Output]"
          TopLeft="257.999997258186,102.599999091029">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.3999986588955"
              Start="0,0"
              End="0,40.8999986588955">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.8999986588955" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\For Loop Container\Load Locations\ADO NET Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\For Loop Container\Load Weather">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\For Loop Container\Load Weather\Derived Column"
          TopLeft="270.999995961785,90.1333317433468" />
        <NodeLayout
          Size="189.6,41.6"
          Id="Package\For Loop Container\Load Weather\Save Avg Weather Data"
          TopLeft="422.499976915619,482.733329976466" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\For Loop Container\Load Weather\Weather Data"
          TopLeft="278.49999614805,5.39999938229715" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\For Loop Container\Load Weather\Sort"
          TopLeft="297.499995864928,165.866664592954" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\For Loop Container\Load Weather\Multicast"
          TopLeft="281.666651277079,240.933331802554" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\For Loop Container\Load Weather\Aggregate"
          TopLeft="448.333308837481,365.666664635672" />
        <NodeLayout
          Size="168.8,41.6"
          Id="Package\For Loop Container\Load Weather\Save Weather Data"
          TopLeft="31.6666754666293,370.266661186351" />
        <EdgeLayout
          Id="Package\For Loop Container\Load Weather.Paths[Sort Output]"
          TopLeft="343.783323571004,207.466664592954">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.4666672095992"
              Start="0,0"
              End="0,25.9666672095992">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9666672095992" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load Weather.Paths[Multicast Output 2]"
          TopLeft="359.799984610412,282.533331802554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151.733324227069,83.1333328331179"
              Start="0,0"
              End="151.733324227069,75.6333328331179">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.9139953809276" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.9139953809276"
                    Point2="0,33.9139953809276"
                    Point3="4,33.9139953809276" />
                  <mssgle:LineSegment
                    End="147.733324227069,33.9139953809276" />
                  <mssgle:CubicBezierSegment
                    Point1="147.733324227069,33.9139953809276"
                    Point2="151.733324227069,33.9139953809276"
                    Point3="151.733324227069,37.9139953809276" />
                  <mssgle:LineSegment
                    End="151.733324227069,75.6333328331179" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load Weather.Paths[Multicast Output 1]"
          TopLeft="322.733317943746,282.533331802554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.666642477117,87.7333293837975"
              Start="0,0"
              End="-206.666642477117,80.2333293837975">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7905502651783" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7905502651783"
                    Point2="0,35.7905502651783"
                    Point3="-4,35.7905502651783" />
                  <mssgle:LineSegment
                    End="-202.666642477117,35.7905502651783" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.666642477117,35.7905502651783"
                    Point2="-206.666642477117,35.7905502651783"
                    Point3="-206.666642477117,39.7905502651783" />
                  <mssgle:LineSegment
                    End="-206.666642477117,80.2333293837975" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load Weather.Paths[Flat File Source Output]"
          TopLeft="348.549996054917,46.9999993822972">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.1333323610496"
              Start="0,0"
              End="0,35.6333323610496">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.6333323610496" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load Weather.Paths[Derived Column Output]"
          TopLeft="346.849995913356,131.733331743347">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.1333328496076"
              Start="0,0"
              End="0,26.6333328496076">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.6333328496076" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container\Load Weather.Paths[Aggregate Output 1]"
          TopLeft="514.41664287655,407.266664635672">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.4666653407945"
              Start="0,0"
              End="0,67.9666653407945">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.9666653407945" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\For Loop Container\Load Weather\Save Avg Weather Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For Loop Container\Load Weather\Save Weather Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>